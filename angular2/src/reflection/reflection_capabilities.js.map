{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/26","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","angular2/src/reflection/reflection_capabilities.es6","angular2/src/reflection/@traceur/generated/TemplateParser/8","angular2/src/reflection/@traceur/generated/TemplateParser/9","angular2/src/reflection/@traceur/generated/TemplateParser/25","angular2/src/reflection/@traceur/generated/TemplateParser/7","angular2/src/reflection/@traceur/generated/TemplateParser/10","angular2/src/reflection/reflection_capabilities.js"],"names":[],"mappings":"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","file":"angular2/src/reflection/reflection_capabilities.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {Type, isPresent} from 'angular2/src/facade/lang';\nimport {List, ListWrapper} from 'angular2/src/facade/collection';\nimport {GetterFn, SetterFn, MethodFn} from './types';\n\nexport class ReflectionCapabilities {\n  factory(type:Type):Function {\n    switch (type.length) {\n      case 0:\n        return function(){return new type();};\n      case 1:\n        return function(a1){return new type(a1);};\n      case 2:\n        return function(a1, a2){return new type(a1, a2);};\n      case 3:\n        return function(a1, a2, a3){return new type(a1, a2, a3);};\n      case 4:\n        return function(a1, a2, a3, a4){return new type(a1, a2, a3, a4);};\n      case 5:\n        return function(a1, a2, a3, a4, a5){return new type(a1, a2, a3, a4, a5);};\n      case 6:\n        return function(a1, a2, a3, a4, a5, a6){return new type(a1, a2, a3, a4, a5, a6);};\n      case 7:\n        return function(a1, a2, a3, a4, a5, a6, a7){return new type(a1, a2, a3, a4, a5, a6, a7);};\n      case 8:\n        return function(a1, a2, a3, a4, a5, a6, a7, a8){return new type(a1, a2, a3, a4, a5, a6, a7, a8);};\n      case 9:\n        return function(a1, a2, a3, a4, a5, a6, a7, a8, a9){return new type(a1, a2, a3, a4, a5, a6, a7, a8, a9);};\n      case 10:\n        return function(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10){return new type(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);};\n    };\n\n    throw new Error(\"Factory cannot take more than 10 arguments\");\n  }\n\n  parameters(typeOfFunc):List<List> {\n    return isPresent(typeOfFunc.parameters) ?\n      typeOfFunc.parameters :\n      ListWrapper.createFixedSize(typeOfFunc.length);\n  }\n\n  annotations(typeOfFunc):List {\n    return isPresent(typeOfFunc.annotations) ? typeOfFunc.annotations : [];\n  }\n\n  getter(name:string):GetterFn {\n    return new Function('o', 'return o.' + name + ';');\n  }\n\n  setter(name:string):SetterFn {\n    return new Function('o', 'v', 'return o.' + name + ' = v;');\n  }\n\n  method(name:string):MethodFn {\n    var method = `o.${name}`;\n    return new Function('o', 'args',\n      `if (!${method}) throw new Error('\"${name}\" is undefined');` +\n      `return ${method}.apply(o, args);`);\n  }\n}","assert.argumentTypes($__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.genericType($__placeholder__0)","assert.type.$__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","import {assert} from \"rtts_assert/rtts_assert\";\nimport {Type,\n  isPresent} from 'angular2/src/facade/lang';\nimport {List,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {GetterFn,\n  SetterFn,\n  MethodFn} from './types';\nexport class ReflectionCapabilities {\n  factory(type) {\n    assert.argumentTypes(type, Type);\n    switch (type.length) {\n      case 0:\n        return assert.returnType((function() {\n          return new type();\n        }), Function);\n      case 1:\n        return assert.returnType((function(a1) {\n          return new type(a1);\n        }), Function);\n      case 2:\n        return assert.returnType((function(a1, a2) {\n          return new type(a1, a2);\n        }), Function);\n      case 3:\n        return assert.returnType((function(a1, a2, a3) {\n          return new type(a1, a2, a3);\n        }), Function);\n      case 4:\n        return assert.returnType((function(a1, a2, a3, a4) {\n          return new type(a1, a2, a3, a4);\n        }), Function);\n      case 5:\n        return assert.returnType((function(a1, a2, a3, a4, a5) {\n          return new type(a1, a2, a3, a4, a5);\n        }), Function);\n      case 6:\n        return assert.returnType((function(a1, a2, a3, a4, a5, a6) {\n          return new type(a1, a2, a3, a4, a5, a6);\n        }), Function);\n      case 7:\n        return assert.returnType((function(a1, a2, a3, a4, a5, a6, a7) {\n          return new type(a1, a2, a3, a4, a5, a6, a7);\n        }), Function);\n      case 8:\n        return assert.returnType((function(a1, a2, a3, a4, a5, a6, a7, a8) {\n          return new type(a1, a2, a3, a4, a5, a6, a7, a8);\n        }), Function);\n      case 9:\n        return assert.returnType((function(a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n          return new type(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n        }), Function);\n      case 10:\n        return assert.returnType((function(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n          return new type(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n        }), Function);\n    }\n    ;\n    throw new Error(\"Factory cannot take more than 10 arguments\");\n  }\n  parameters(typeOfFunc) {\n    return assert.returnType((isPresent(typeOfFunc.parameters) ? typeOfFunc.parameters : ListWrapper.createFixedSize(typeOfFunc.length)), assert.genericType(List, List));\n  }\n  annotations(typeOfFunc) {\n    return assert.returnType((isPresent(typeOfFunc.annotations) ? typeOfFunc.annotations : []), List);\n  }\n  getter(name) {\n    assert.argumentTypes(name, assert.type.string);\n    return assert.returnType((new Function('o', 'return o.' + name + ';')), GetterFn);\n  }\n  setter(name) {\n    assert.argumentTypes(name, assert.type.string);\n    return assert.returnType((new Function('o', 'v', 'return o.' + name + ' = v;')), SetterFn);\n  }\n  method(name) {\n    assert.argumentTypes(name, assert.type.string);\n    var method = `o.${name}`;\n    return assert.returnType((new Function('o', 'args', `if (!${method}) throw new Error('\"${name}\" is undefined');` + `return ${method}.apply(o, args);`)), MethodFn);\n  }\n}\nObject.defineProperty(ReflectionCapabilities.prototype.factory, \"parameters\", {get: function() {\n    return [[Type]];\n  }});\nObject.defineProperty(ReflectionCapabilities.prototype.getter, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(ReflectionCapabilities.prototype.setter, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(ReflectionCapabilities.prototype.method, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\n\n//# sourceMappingURL=/Users/jbisa/ksi/devel/angular2/modules/angular2/src/reflection/reflection_capabilities.map\n\n//# sourceMappingURL=./reflection_capabilities.map"]}
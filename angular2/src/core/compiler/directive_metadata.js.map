{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/26","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","angular2/src/core/compiler/directive_metadata.js","angular2/src/core/compiler/@traceur/generated/TemplateParser/8","angular2/src/core/compiler/@traceur/generated/TemplateParser/10"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,sGAAoB,UAAS,SAAQ;;;;;;ACApD,OAAO;AACD,UAAM,GCDZ,SAAS,IAAG,CAAG;ACAf,aAAoB,KAAG,OAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,WAAoB,KAAG,KAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,gBAAoB,KAAG,UAAkB,CAAC;IDElC,CDDuB;AACzB,UAAM;wBGFY,CAAA,SAAQ,AAAC,uBCAjC,SAAQ,AAAC,CAAE;AACD,AAAI,UAAA,oBCKP,SAAM,kBAAgB,CAIf,IAAQ,CAAG,CAAA,UAAS,CAAa;ACV/C,eAAK,cAAc,CAAA,IAAA,CDUA,KAAG,CAAA,WAAA,CAAc,UAAQ,CCVN,CAAA;ADWlC,aAAG,WAAW,EAAI,WAAS,CAAC;AAC5B,aAAG,KAAK,EAAI,KAAG,CAAC;QDX8B,ACYhD,CDZiD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,2BACkB,CAAC;MACzD,AAAC,EAAC,EDJ4D;AIAtE,WAAK,eAAe,AAAC,CAAA,iBAAA,CAAA,aAAA,CACZ,EAAA,GAAE,CAAG,UAAS,AAAE,CAAA;AAAC,eAAA,EFSP,CAAA,IAAG,CAAA,CAAc,EAAA,SAAQ,CAAA,CAAA,CETK;QAAC,CAAC,CAAC,CAAC;IPCtB;EAC3B,CAAA;ADDI,CAAC,CAAC;AMckC","file":"angular2/src/core/compiler/directive_metadata.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {Type} from 'angular2/src/facade/lang';\nimport {Directive} from 'angular2/src/core/annotations/annotations'\n\n/**\n * Combination of a type with the Directive annotation\n */\nexport class DirectiveMetadata {\n  type:Type;\n  annotation:Directive;\n\n  constructor(type:Type, annotation:Directive) {\n    this.annotation = annotation;\n    this.type = type;\n  }\n}\n","assert.argumentTypes($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}
{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/src/core/compiler/pipeline/util.js","angular2/src/core/compiler/pipeline/@traceur/generated/TemplateParser/8","angular2/src/core/compiler/pipeline/@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/26","angular2/src/core/compiler/pipeline/@traceur/generated/TemplateParser/10"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,yDAAoB,UAAS,SAAQ;;;;;;;ACK7C,SAAS,oBAAkB,CAAE,KAAW;ACL/C,SAAK,cAAc,CAAA,KAAA,CCAnB,CAAA,MAAK,KAAK,OAAA,CDA4B,CAAA;ADMpC,SAAO,CAAA,aAAY,iBAAiB,AAAE,CAAA,KAAI,CAAG,iBAAe,GAAI,SAAA,CAAA,CAAM;AACpE,WAAO,CAAA,CAAA,CAAE,CAAA,CAAC,YAAY,AAAC,EAAC,CAAC;IAC3B,EAAC,CAAC;EACJ;AAEO,SAAS,oBAAkB,CAAE,KAAW;ACX/C,SAAK,cAAc,CAAA,KAAA,CCAnB,CAAA,MAAK,KAAK,OAAA,CDA4B,CAAA;ADYpC,SAAO,CAAA,aAAY,iBAAiB,AAAE,CAAA,KAAI,CAAG,kBAAgB,GAAI,SAAA,CAAA,CAAM;AACrE,WAAO,CAAA,GAAE,EAAI,CAAA,CAAA,CAAE,CAAA,CAAC,YAAa,EAAC,CAAC;IACjC,EAAC,CAAC;EACJ;AGdQ,UAAQ,AAAC,4CAAqC,CAAA;AAA9C,UAAQ,AAAC,4CAAqC,CAAA;ACDtD,OAAO;AACD,UAAM,GCDZ,SAAS,IAAG,CAAG;ACAf,aAAoB,KAAG,OAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,oBAAoB,KAAG,cAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;IDElC,CDDuB;AACzB,UAAM;uBJAW,CAAA,aAAY,OAAO,AAAE,CAAA,UAAS,CAAC;wBAC9B,CAAA,aAAY,OAAQ,AAAC,CAAA,SAAQ,CAAC;AOHtD,WAAK,eAAe,AAAC,CAAA,mBAAA,CAAA,aAAA,CACZ,EAAA,GAAE,CAAG,UAAQ,AAAG,CAAA;AAAC,eAAA,ELD1B,CAAA,MAAK,KAAK,OAAA,CAAA,CAAA,CKCuC;QAAC,CAAC,CAAC,CAAC;APcrD,WOfK,eAAgB,CAAA,mBAAA,CAAA,aAAA,CACZ,EAAA,GAAE,CAAG,UAAS,AAAE,CAAA;AAAC,eAAA,ELD1B,CAAA,MAAK,KAAK,OAAA,CAAA,CAAA,CKCuC;QAAC,CAAC,CAAC,CAAC;IHCtB;EAC3B,CAAA;ALDI,CAAC,CAAC;ACwBoB","file":"angular2/src/core/compiler/pipeline/util.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {StringWrapper, RegExpWrapper} from 'angular2/src/facade/lang';\n\nvar DASH_CASE_REGEXP = RegExpWrapper.create('-([a-z])');\nvar CAMEL_CASE_REGEXP = RegExpWrapper.create('([A-Z])');\n\nexport function dashCaseToCamelCase(input:string) {\n  return StringWrapper.replaceAllMapped(input, DASH_CASE_REGEXP, (m) => {\n    return m[1].toUpperCase();\n  });\n}\n\nexport function camelCaseToDashCase(input:string) {\n  return StringWrapper.replaceAllMapped(input, CAMEL_CASE_REGEXP, (m) => {\n    return '-' + m[1].toLowerCase();\n  });\n}\n","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}
{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/26","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","angular2/src/core/compiler/pipeline/compile_pipeline.js","angular2/src/core/compiler/pipeline/@traceur/generated/TemplateParser/8","angular2/src/core/compiler/pipeline/@traceur/generated/TemplateParser/25","angular2/src/core/compiler/pipeline/@traceur/generated/TemplateParser/3784","angular2/src/core/compiler/pipeline/@traceur/generated/TemplateParser/7","angular2/src/core/compiler/pipeline/@traceur/generated/TemplateParser/9","angular2/src/core/compiler/pipeline/@traceur/generated/TemplateParser/3785","angular2/src/core/compiler/pipeline/@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"angular2/src/core/compiler/pipeline/compile_pipeline.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {isPresent} from 'angular2/src/facade/lang';\nimport {List, ListWrapper} from 'angular2/src/facade/collection';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {CompileElement} from './compile_element';\nimport {CompileControl} from './compile_control';\nimport {CompileStep} from './compile_step';\n\n/**\n * CompilePipeline for executing CompileSteps recursively for\n * all elements in a template.\n */\nexport class CompilePipeline {\n  _control:CompileControl;\n  constructor(steps:List<CompileStep>) {\n    this._control = new CompileControl(steps);\n  }\n\n  process(rootElement, compilationCtxtDescription:string = ''):List {\n    var results = ListWrapper.create();\n    this._process(results, null, new CompileElement(rootElement, compilationCtxtDescription), compilationCtxtDescription);\n    return results;\n  }\n\n  _process(results, parent:CompileElement, current:CompileElement, compilationCtxtDescription:string = '') {\n    var additionalChildren = this._control.internalProcess(results, 0, parent, current);\n\n    if (current.compileChildren) {\n      var node = DOM.firstChild(DOM.templateAwareRoot(current.element));\n      while (isPresent(node)) {\n        // compiliation can potentially move the node, so we need to store the\n        // next sibling before recursing.\n        var nextNode = DOM.nextSibling(node);\n        if (DOM.isElementNode(node)) {\n          this._process(results, current, new CompileElement(node, compilationCtxtDescription));\n        }\n        node = nextNode;\n      }\n    }\n\n    if (isPresent(additionalChildren)) {\n      for (var i=0; i<additionalChildren.length; i++) {\n        this._process(results, current, additionalChildren[i]);\n      }\n    }\n  }\n}\n","assert.argumentTypes($__placeholder__0)","assert.genericType($__placeholder__0)","assert.type.any","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.type.any","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}
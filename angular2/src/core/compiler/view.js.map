{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/26","angular2/src/core/compiler/view.js","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","angular2/src/core/compiler/@traceur/generated/TemplateParser/8","angular2/src/core/compiler/@traceur/generated/TemplateParser/7","angular2/src/core/compiler/@traceur/generated/TemplateParser/3105","angular2/src/core/compiler/@traceur/generated/TemplateParser/3107","angular2/src/core/compiler/@traceur/generated/TemplateParser/3108","angular2/src/core/compiler/@traceur/generated/TemplateParser/3109","angular2/src/core/compiler/@traceur/generated/TemplateParser/389","angular2/src/core/compiler/@traceur/generated/TemplateParser/10","angular2/src/core/compiler/@traceur/generated/TemplateParser/3110","angular2/src/core/compiler/@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/16","angular2/src/core/compiler/@traceur/generated/TemplateParser/3118","angular2/src/core/compiler/@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/29"],"names":[],"mappings":"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","file":"angular2/src/core/compiler/view.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","import {DOM} from 'angular2/src/dom/dom_adapter';\nimport {Promise} from 'angular2/src/facade/async';\nimport {ListWrapper, MapWrapper, Map, StringMapWrapper, List} from 'angular2/src/facade/collection';\nimport {AST, ContextWithVariableBindings, ChangeDispatcher, ProtoChangeDetector, ChangeDetector,\n  ChangeRecord, BindingRecord} from 'angular2/change_detection';\n\nimport {ProtoElementInjector, ElementInjector, PreBuiltObjects} from './element_injector';\nimport {BindingPropagationConfig} from './binding_propagation_config';\nimport {ElementBinder} from './element_binder';\nimport {DirectiveMetadata} from './directive_metadata';\nimport {SetterFn} from 'angular2/src/reflection/types';\nimport {IMPLEMENTS, int, isPresent, isBlank, BaseException} from 'angular2/src/facade/lang';\nimport {Injector} from 'angular2/di';\nimport {NgElement} from 'angular2/src/core/dom/element';\nimport {ViewContainer} from './view_container';\nimport {LightDom, DestinationLightDom} from './shadow_dom_emulation/light_dom';\nimport {ShadowDomStrategy} from './shadow_dom_strategy';\nimport {ViewPool} from './view_pool';\nimport {EventManager} from 'angular2/src/core/events/event_manager';\n\nconst NG_BINDING_CLASS = 'ng-binding';\nconst NG_BINDING_CLASS_SELECTOR = '.ng-binding';\n\n// TODO(rado): make this configurable/smarter.\nvar VIEW_POOL_CAPACITY = 10000;\nvar VIEW_POOL_PREFILL = 0;\n\n/**\n * Const of making objects: http://jsperf.com/instantiate-size-of-object\n */\n@IMPLEMENTS(ChangeDispatcher)\nexport class View {\n  /// This list matches the _nodes list. It is sparse, since only Elements have ElementInjector\n  rootElementInjectors:List<ElementInjector>;\n  elementInjectors:List<ElementInjector>;\n  bindElements:List;\n  textNodes:List;\n  changeDetector:ChangeDetector;\n  /// When the view is part of render tree, the DocumentFragment is empty, which is why we need\n  /// to keep track of the nodes.\n  nodes:List;\n  componentChildViews: List<View>;\n  viewContainers: List<ViewContainer>;\n  preBuiltObjects: List<PreBuiltObjects>;\n  proto: ProtoView;\n  context: any;\n  contextWithLocals:ContextWithVariableBindings;\n\n  constructor(proto:ProtoView, nodes:List, protoContextLocals:Map) {\n    this.proto = proto;\n    this.nodes = nodes;\n    this.changeDetector = null;\n    this.elementInjectors = null;\n    this.rootElementInjectors = null;\n    this.textNodes = null;\n    this.bindElements = null;\n    this.componentChildViews = null;\n    this.viewContainers = null;\n    this.preBuiltObjects = null;\n    this.context = null;\n    this.contextWithLocals = (MapWrapper.size(protoContextLocals) > 0)\n      ? new ContextWithVariableBindings(null, MapWrapper.clone(protoContextLocals))\n      : null;\n  }\n\n  init(changeDetector:ChangeDetector, elementInjectors:List, rootElementInjectors:List, textNodes: List, bindElements:List,\n    viewContainers:List, preBuiltObjects:List, componentChildViews:List) {\n    this.changeDetector = changeDetector;\n    this.elementInjectors = elementInjectors;\n    this.rootElementInjectors = rootElementInjectors;\n    this.textNodes = textNodes;\n    this.bindElements = bindElements;\n    this.viewContainers = viewContainers;\n    this.preBuiltObjects = preBuiltObjects;\n    this.componentChildViews = componentChildViews;\n  }\n\n  setLocal(contextName: string, value) {\n    if (!this.hydrated()) throw new BaseException('Cannot set locals on dehydrated view.');\n    if (!MapWrapper.contains(this.proto.variableBindings, contextName)) {\n      return;\n    }\n    var templateName = MapWrapper.get(this.proto.variableBindings, contextName);\n    this.context.set(templateName, value);\n  }\n\n  hydrated() {\n    return isPresent(this.context);\n  }\n\n  _hydrateContext(newContext) {\n    if (isPresent(this.contextWithLocals)) {\n      this.contextWithLocals.parent = newContext;\n      this.context = this.contextWithLocals;\n    } else {\n      this.context = newContext;\n    }\n    // TODO(tbosch): if we have a contextWithLocals we actually only need to\n    // set the contextWithLocals once. Would it be faster to always use a contextWithLocals\n    // even if we don't have locals and not update the recordRange here?\n    this.changeDetector.hydrate(this.context);\n  }\n\n  _dehydrateContext() {\n    if (isPresent(this.contextWithLocals)) {\n      this.contextWithLocals.clearValues();\n    }\n    this.context = null;\n    this.changeDetector.dehydrate();\n  }\n\n  /**\n   * A dehydrated view is a state of the view that allows it to be moved around\n   * the view tree, without incurring the cost of recreating the underlying\n   * injectors and watch records.\n   *\n   * A dehydrated view has the following properties:\n   *\n   * - all element injectors are empty.\n   * - all appInjectors are released.\n   * - all viewcontainers are empty.\n   * - all context locals are set to null.\n   * - the view context is null.\n   *\n   * A call to hydrate/dehydrate does not attach/detach the view from the view\n   * tree.\n   */\n  hydrate(appInjector: Injector, hostElementInjector: ElementInjector,\n      context: Object) {\n    if (this.hydrated()) throw new BaseException('The view is already hydrated.');\n    this._hydrateContext(context);\n\n    // viewContainers\n    for (var i = 0; i < this.viewContainers.length; i++) {\n      this.viewContainers[i].hydrate(appInjector, hostElementInjector);\n    }\n\n    var binders = this.proto.elementBinders;\n    var componentChildViewIndex = 0;\n    for (var i = 0; i < binders.length; ++i) {\n      var componentDirective = binders[i].componentDirective;\n      var shadowDomAppInjector = null;\n\n      // shadowDomAppInjector\n      if (isPresent(componentDirective)) {\n        var services = componentDirective.annotation.services;\n        if (isPresent(services))\n          shadowDomAppInjector = appInjector.createChild(services);\n        else {\n          shadowDomAppInjector = appInjector;\n        }\n      } else {\n        shadowDomAppInjector = null;\n      }\n\n      // elementInjectors\n      var elementInjector = this.elementInjectors[i];\n      if (isPresent(elementInjector)) {\n        elementInjector.instantiateDirectives(appInjector, shadowDomAppInjector, this.preBuiltObjects[i]);\n\n        // The exporting of $implicit is a special case. Since multiple elements will all export\n        // the different values as $implicit, directly assign $implicit bindings to the variable\n        // name.\n        var exportImplicitName = elementInjector.getExportImplicitName();\n        if (elementInjector.isExportingComponent()) {\n          this.context.set(exportImplicitName, elementInjector.getComponent());\n        } else if (elementInjector.isExportingElement()) {\n          this.context.set(exportImplicitName, elementInjector.getNgElement().domElement);\n        }\n      }\n\n      if (isPresent(componentDirective)) {\n        this.componentChildViews[componentChildViewIndex++].hydrate(shadowDomAppInjector,\n          elementInjector, elementInjector.getComponent());\n      }\n    }\n\n    // this should be moved into DOM write queue\n    for (var i = 0; i < binders.length; ++i) {\n      var componentDirective = binders[i].componentDirective;\n      if (isPresent(componentDirective)) {\n        var lightDom = this.preBuiltObjects[i].lightDom;\n        if (isPresent(lightDom)) {\n          lightDom.redistribute();\n        }\n      }\n    }\n  }\n\n  dehydrate() {\n    // Note: preserve the opposite order of the hydration process.\n\n    // componentChildViews\n    for (var i = 0; i < this.componentChildViews.length; i++) {\n      this.componentChildViews[i].dehydrate();\n    }\n\n    // elementInjectors\n    for (var i = 0; i < this.elementInjectors.length; i++) {\n      if (isPresent(this.elementInjectors[i])) {\n        this.elementInjectors[i].clearDirectives();\n      }\n    }\n\n    // viewContainers\n    if (isPresent(this.viewContainers)) {\n      for (var i = 0; i < this.viewContainers.length; i++) {\n        this.viewContainers[i].dehydrate();\n      }\n    }\n\n    this._dehydrateContext();\n  }\n\n  /**\n   * Triggers the event handlers for the element and the directives.\n   *\n   * This method is intended to be called from directive EventEmitters.\n   *\n   * @param {string} eventName\n   * @param {*} eventObj\n   * @param {int} binderIndex\n   */\n  triggerEventHandlers(eventName: string, eventObj, binderIndex: int) {\n    var handlers = this.proto.eventHandlers[binderIndex];\n    if (isBlank(handlers)) return;\n    var handler = StringMapWrapper.get(handlers, eventName);\n    if (isBlank(handler)) return;\n    handler(eventObj, this);\n  }\n\n  onRecordChange(directiveMemento, records:List) {\n    this._invokeMementos(records);\n    if (directiveMemento instanceof DirectiveMemento) {\n      this._notifyDirectiveAboutChanges(directiveMemento, records);\n    }\n  }\n\n  _invokeMementos(records:List) {\n    for(var i = 0; i < records.length; ++i) {\n      this._invokeMementoFor(records[i]);\n    }\n  }\n\n  _notifyDirectiveAboutChanges(directiveMemento, records:List) {\n    var dir = directiveMemento.directive(this.elementInjectors);\n    var binding = directiveMemento.directiveBinding(this.elementInjectors);\n\n    if (binding.callOnChange) {\n      dir.onChange(this._collectChanges(records));\n    }\n  }\n\n    // dispatch to element injector or text nodes based on context\n  _invokeMementoFor(record:ChangeRecord) {\n    var memento = record.bindingMemento;\n    if (memento instanceof DirectiveBindingMemento) {\n      var directiveMemento:DirectiveBindingMemento = memento;\n      directiveMemento.invoke(record, this.elementInjectors);\n\n    } else if (memento instanceof ElementBindingMemento) {\n      var elementMemento:ElementBindingMemento = memento;\n      elementMemento.invoke(record, this.bindElements);\n\n    } else {\n      // we know it refers to _textNodes.\n      var textNodeIndex:number = memento;\n      DOM.setText(this.textNodes[textNodeIndex], record.currentValue);\n    }\n  }\n\n  _collectChanges(records:List) {\n    var changes = StringMapWrapper.create();\n    for(var i = 0; i < records.length; ++i) {\n      var record = records[i];\n      var propertyUpdate = new PropertyUpdate(record.currentValue, record.previousValue);\n      StringMapWrapper.set(changes, record.bindingMemento._setterName, propertyUpdate);\n    }\n    return changes;\n  }\n}\n\nexport class ProtoView {\n  element;\n  elementBinders:List<ElementBinder>;\n  protoChangeDetector:ProtoChangeDetector;\n  variableBindings: Map;\n  protoContextLocals:Map;\n  textNodesWithBindingCount:int;\n  elementsWithBindingCount:int;\n  instantiateInPlace:boolean;\n  rootBindingOffset:int;\n  isTemplateElement:boolean;\n  shadowDomStrategy: ShadowDomStrategy;\n  _viewPool: ViewPool;\n  stylePromises: List<Promise>;\n  // List<Map<eventName, handler>>, indexed by binder index\n  eventHandlers:List;\n  bindingRecords:List;\n\n  constructor(\n      template,\n      protoChangeDetector:ProtoChangeDetector,\n      shadowDomStrategy:ShadowDomStrategy) {\n    this.element = template;\n    this.elementBinders = [];\n    this.variableBindings = MapWrapper.create();\n    this.protoContextLocals = MapWrapper.create();\n    this.protoChangeDetector = protoChangeDetector;\n    this.textNodesWithBindingCount = 0;\n    this.elementsWithBindingCount = 0;\n    this.instantiateInPlace = false;\n    this.rootBindingOffset = (isPresent(this.element) && DOM.hasClass(this.element, NG_BINDING_CLASS))\n      ? 1 : 0;\n    this.isTemplateElement = DOM.isTemplateElement(this.element);\n    this.shadowDomStrategy = shadowDomStrategy;\n    this._viewPool = new ViewPool(VIEW_POOL_CAPACITY);\n    this.stylePromises = [];\n    this.eventHandlers = [];\n    this.bindingRecords = [];\n  }\n\n  // TODO(rado): hostElementInjector should be moved to hydrate phase.\n  instantiate(hostElementInjector: ElementInjector, eventManager: EventManager):View {\n    if (this._viewPool.length() == 0) this._preFillPool(hostElementInjector, eventManager);\n    var view = this._viewPool.pop();\n    return isPresent(view) ? view : this._instantiate(hostElementInjector, eventManager);\n  }\n\n  _preFillPool(hostElementInjector: ElementInjector, eventManager: EventManager) {\n    for (var i = 0; i < VIEW_POOL_PREFILL; i++) {\n      this._viewPool.push(this._instantiate(hostElementInjector, eventManager));\n    }\n  }\n\n  _instantiate(hostElementInjector: ElementInjector, eventManager: EventManager): View {\n    var rootElementClone = this.instantiateInPlace ? this.element : DOM.importIntoDoc(this.element);\n    var elementsWithBindingsDynamic;\n    if (this.isTemplateElement) {\n      elementsWithBindingsDynamic = DOM.querySelectorAll(DOM.content(rootElementClone), NG_BINDING_CLASS_SELECTOR);\n    } else {\n      elementsWithBindingsDynamic= DOM.getElementsByClassName(rootElementClone, NG_BINDING_CLASS);\n    }\n\n    var elementsWithBindings = ListWrapper.createFixedSize(elementsWithBindingsDynamic.length);\n    for (var binderIdx = 0; binderIdx < elementsWithBindingsDynamic.length; ++binderIdx) {\n      elementsWithBindings[binderIdx] = elementsWithBindingsDynamic[binderIdx];\n    }\n\n    var viewNodes;\n    if (this.isTemplateElement) {\n      var childNode = DOM.firstChild(DOM.content(rootElementClone));\n      viewNodes = []; // TODO(perf): Should be fixed size, since we could pre-compute in in ProtoView\n      // Note: An explicit loop is the fastest way to convert a DOM array into a JS array!\n      while(childNode != null) {\n        ListWrapper.push(viewNodes, childNode);\n        childNode = DOM.nextSibling(childNode);\n      }\n    } else {\n      viewNodes = [rootElementClone];\n    }\n\n    var view = new View(this, viewNodes, this.protoContextLocals);\n    var changeDetector = this.protoChangeDetector.instantiate(view, this.bindingRecords);\n\n    var binders = this.elementBinders;\n    var elementInjectors = ListWrapper.createFixedSize(binders.length);\n    var eventHandlers = ListWrapper.createFixedSize(binders.length);\n    var rootElementInjectors = [];\n    var textNodes = [];\n    var elementsWithPropertyBindings = [];\n    var preBuiltObjects = ListWrapper.createFixedSize(binders.length);\n    var viewContainers = [];\n    var componentChildViews = [];\n\n    for (var binderIdx = 0; binderIdx < binders.length; binderIdx++) {\n      var binder = binders[binderIdx];\n      var element;\n      if (binderIdx === 0 && this.rootBindingOffset === 1) {\n        element = rootElementClone;\n      } else {\n        element = elementsWithBindings[binderIdx - this.rootBindingOffset];\n      }\n      var elementInjector = null;\n\n      // elementInjectors and rootElementInjectors\n      var protoElementInjector = binder.protoElementInjector;\n      if (isPresent(protoElementInjector)) {\n        if (isPresent(protoElementInjector.parent)) {\n          var parentElementInjector = elementInjectors[protoElementInjector.parent.index];\n          elementInjector = protoElementInjector.instantiate(parentElementInjector, null);\n        } else {\n          elementInjector = protoElementInjector.instantiate(null, hostElementInjector);\n          ListWrapper.push(rootElementInjectors, elementInjector);\n        }\n      }\n      elementInjectors[binderIdx] = elementInjector;\n\n      if (binder.hasElementPropertyBindings) {\n        ListWrapper.push(elementsWithPropertyBindings, element);\n      }\n\n      // textNodes\n      var textNodeIndices = binder.textNodeIndices;\n      if (isPresent(textNodeIndices)) {\n        var childNode = DOM.firstChild(DOM.templateAwareRoot(element));\n        for (var j = 0, k = 0; j < textNodeIndices.length; j++) {\n          for(var index = textNodeIndices[j]; k < index; k++) {\n            childNode = DOM.nextSibling(childNode);\n          }\n          ListWrapper.push(textNodes, childNode);\n        }\n      }\n\n      // componentChildViews\n      var lightDom = null;\n      var bindingPropagationConfig = null;\n      if (isPresent(binder.componentDirective)) {\n        var strategy = this.shadowDomStrategy;\n        var childView = binder.nestedProtoView.instantiate(elementInjector, eventManager);\n        changeDetector.addChild(childView.changeDetector);\n\n        lightDom = strategy.constructLightDom(view, childView, element);\n        strategy.attachTemplate(element, childView);\n\n        bindingPropagationConfig = new BindingPropagationConfig(changeDetector);\n\n        ListWrapper.push(componentChildViews, childView);\n      }\n\n      // viewContainers\n      var viewContainer = null;\n      if (isPresent(binder.viewportDirective)) {\n        var destLightDom = this._directParentElementLightDom(protoElementInjector, preBuiltObjects);\n        viewContainer = new ViewContainer(view, element, binder.nestedProtoView, elementInjector,\n          eventManager, destLightDom);\n        ListWrapper.push(viewContainers, viewContainer);\n      }\n\n      // preBuiltObjects\n      if (isPresent(elementInjector)) {\n        preBuiltObjects[binderIdx] = new PreBuiltObjects(view, new NgElement(element), viewContainer,\n          lightDom, bindingPropagationConfig);\n      }\n\n      // events\n      if (isPresent(binder.events)) {\n        eventHandlers[binderIdx] = StringMapWrapper.create();\n        StringMapWrapper.forEach(binder.events, (eventMap, eventName) => {\n          var handler = ProtoView.buildEventHandler(eventMap, binderIdx);\n          StringMapWrapper.set(eventHandlers[binderIdx], eventName, handler);\n          if (isBlank(elementInjector) || !elementInjector.hasEventEmitter(eventName)) {\n            eventManager.addEventListener(element, eventName,\n              (event) => { handler(event, view); });\n          }\n        });\n      }\n    }\n\n    this.eventHandlers = eventHandlers;\n\n    view.init(changeDetector, elementInjectors, rootElementInjectors, textNodes, elementsWithPropertyBindings,\n      viewContainers, preBuiltObjects, componentChildViews);\n\n    return view;\n  }\n\n  returnToPool(view: View) {\n    this._viewPool.push(view);\n  }\n\n  /**\n   * Creates an event handler.\n   *\n   * @param {Map} eventMap Map directiveIndexes to expressions\n   * @param {int} injectorIdx\n   * @returns {Function}\n   */\n  static buildEventHandler(eventMap: Map, injectorIdx: int) {\n    var locals = MapWrapper.create();\n    return (event, view) => {\n      // Most of the time the event will be fired only when the view is in the live document.\n      // However, in a rare circumstance the view might get dehydrated, in between the event\n      // queuing up and firing.\n      if (view.hydrated()) {\n        MapWrapper.set(locals, '$event', event);\n        MapWrapper.forEach(eventMap, (expr, directiveIndex) => {\n          var context;\n          if (directiveIndex === -1) {\n            context = view.context;\n          } else {\n            context = view.elementInjectors[injectorIdx].getDirectiveAtIndex(directiveIndex);\n          }\n          expr.eval(new ContextWithVariableBindings(context, locals));\n        });\n      }\n    }\n  }\n\n  _directParentElementLightDom(protoElementInjector:ProtoElementInjector, preBuiltObjects:List):LightDom {\n    var p = protoElementInjector.directParent();\n    return isPresent(p) ? preBuiltObjects[p.index].lightDom : null;\n  }\n\n  bindVariable(contextName:string, templateName:string) {\n    MapWrapper.set(this.variableBindings, contextName, templateName);\n    MapWrapper.set(this.protoContextLocals, templateName, null);\n  }\n\n  bindElement(protoElementInjector:ProtoElementInjector,\n      componentDirective:DirectiveMetadata = null, viewportDirective:DirectiveMetadata = null):ElementBinder {\n    var elBinder = new ElementBinder(protoElementInjector, componentDirective, viewportDirective);\n    ListWrapper.push(this.elementBinders, elBinder);\n    return elBinder;\n  }\n\n  /**\n   * Adds a text node binding for the last created ElementBinder via bindElement\n   */\n  bindTextNode(indexInParent:int, expression:AST) {\n    var elBinder = this.elementBinders[this.elementBinders.length-1];\n    if (isBlank(elBinder.textNodeIndices)) {\n      elBinder.textNodeIndices = ListWrapper.create();\n    }\n    ListWrapper.push(elBinder.textNodeIndices, indexInParent);\n    var memento = this.textNodesWithBindingCount++;\n    ListWrapper.push(this.bindingRecords, new BindingRecord(expression, memento, null));\n  }\n\n  /**\n   * Adds an element property binding for the last created ElementBinder via bindElement\n   */\n  bindElementProperty(expression:AST, setterName:string, setter:SetterFn) {\n    var elBinder = this.elementBinders[this.elementBinders.length-1];\n    if (!elBinder.hasElementPropertyBindings) {\n      elBinder.hasElementPropertyBindings = true;\n      this.elementsWithBindingCount++;\n    }\n    var memento = new ElementBindingMemento(this.elementsWithBindingCount-1, setterName, setter);\n    ListWrapper.push(this.bindingRecords, new BindingRecord(expression, memento, null));\n  }\n\n  /**\n   * Adds an event binding for the last created ElementBinder via bindElement.\n   *\n   * If the directive index is a positive integer, the event is evaluated in the context of\n   * the given directive.\n   *\n   * If the directive index is -1, the event is evaluated in the context of the enclosing view.\n   *\n   * @param {string} eventName\n   * @param {AST} expression\n   * @param {int} directiveIndex The directive index in the binder or -1 when the event is not bound\n   *                             to a directive\n   */\n  bindEvent(eventName:string, expression:AST, directiveIndex: int = -1) {\n    var elBinder = this.elementBinders[this.elementBinders.length - 1];\n    var events = elBinder.events;\n    if (isBlank(events)) {\n      events = StringMapWrapper.create();\n      elBinder.events = events;\n    }\n    var event = StringMapWrapper.get(events, eventName);\n    if (isBlank(event)) {\n      event = MapWrapper.create();\n      StringMapWrapper.set(events, eventName, event);\n    }\n    MapWrapper.set(event, directiveIndex, expression);\n  }\n\n  /**\n   * Adds a directive property binding for the last created ElementBinder via bindElement\n   */\n  bindDirectiveProperty(\n    directiveIndex:number,\n    expression:AST,\n    setterName:string,\n    setter:SetterFn) {\n\n    var bindingMemento = new DirectiveBindingMemento(\n      this.elementBinders.length-1,\n      directiveIndex,\n      setterName,\n      setter\n    );\n    var directiveMemento = DirectiveMemento.get(bindingMemento);\n    ListWrapper.push(this.bindingRecords, new BindingRecord(expression, bindingMemento, directiveMemento));\n  }\n\n  // Create a rootView as if the compiler encountered <rootcmp></rootcmp>,\n  // and the component template is already compiled into protoView.\n  // Used for bootstrapping.\n  static createRootProtoView(protoView: ProtoView,\n      insertionElement,\n      rootComponentAnnotatedType: DirectiveMetadata,\n      protoChangeDetector:ProtoChangeDetector,\n      shadowDomStrategy: ShadowDomStrategy\n  ): ProtoView {\n\n    DOM.addClass(insertionElement, NG_BINDING_CLASS);\n    var cmpType = rootComponentAnnotatedType.type;\n    var rootProtoView = new ProtoView(insertionElement, protoChangeDetector, shadowDomStrategy);\n    rootProtoView.instantiateInPlace = true;\n    var binder = rootProtoView.bindElement(\n        new ProtoElementInjector(null, 0, [cmpType], true));\n    binder.componentDirective = rootComponentAnnotatedType;\n    binder.nestedProtoView = protoView;\n    shadowDomStrategy.shimAppElement(rootComponentAnnotatedType, insertionElement);\n    return rootProtoView;\n  }\n}\n\nexport class ElementBindingMemento {\n  _elementIndex:int;\n  _setterName:string;\n  _setter:SetterFn;\n  constructor(elementIndex:int, setterName:string, setter:SetterFn) {\n    this._elementIndex = elementIndex;\n    this._setterName = setterName;\n    this._setter = setter;\n  }\n\n  invoke(record:ChangeRecord, bindElements:List) {\n    var element = bindElements[this._elementIndex];\n    this._setter(element, record.currentValue);\n  }\n}\n\nexport class DirectiveBindingMemento {\n  _elementInjectorIndex:int;\n  _directiveIndex:int;\n  _setterName:string;\n  _setter:SetterFn;\n  constructor(\n      elementInjectorIndex:number,\n      directiveIndex:number,\n      setterName:string,\n      setter:SetterFn) {\n    this._elementInjectorIndex = elementInjectorIndex;\n    this._directiveIndex = directiveIndex;\n    this._setterName = setterName;\n    this._setter = setter;\n  }\n\n  invoke(record:ChangeRecord, elementInjectors:List<ElementInjector>) {\n    var elementInjector:ElementInjector = elementInjectors[this._elementInjectorIndex];\n    var directive = elementInjector.getDirectiveAtIndex(this._directiveIndex);\n    this._setter(directive, record.currentValue);\n  }\n}\n\nvar _directiveMementos = MapWrapper.create();\n\nclass DirectiveMemento {\n  _elementInjectorIndex:number;\n  _directiveIndex:number;\n\n  constructor(elementInjectorIndex:number, directiveIndex:number) {\n    this._elementInjectorIndex = elementInjectorIndex;\n    this._directiveIndex = directiveIndex;\n  }\n\n  static get(memento:DirectiveBindingMemento) {\n    var elementInjectorIndex = memento._elementInjectorIndex;\n    var directiveIndex = memento._directiveIndex;\n    var id = elementInjectorIndex * 100 + directiveIndex;\n\n    if (!MapWrapper.contains(_directiveMementos, id)) {\n      MapWrapper.set(_directiveMementos, id, new DirectiveMemento(elementInjectorIndex, directiveIndex));\n    }\n    return MapWrapper.get(_directiveMementos, id);\n  }\n\n  directive(elementInjectors:List<ElementInjector>) {\n    var elementInjector:ElementInjector = elementInjectors[this._elementInjectorIndex];\n    return elementInjector.getDirectiveAtIndex(this._directiveIndex);\n  }\n\n  directiveBinding(elementInjectors:List<ElementInjector>) {\n    var elementInjector:ElementInjector = elementInjectors[this._elementInjectorIndex];\n    return elementInjector.getDirectiveBindingAtIndex(this._directiveIndex);\n  }\n}\n\nclass PropertyUpdate {\n  currentValue;\n  previousValue;\n\n  constructor(currentValue, previousValue) {\n    this.currentValue = currentValue;\n    this.previousValue = previousValue;\n  }\n}\n","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","assert.type.any","assert.type.any","assert.type.any","assert.type.any","assert.type($__placeholder__0, $__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.any","return assert.returnType(($__placeholder__0), $__placeholder__1)","void 0","assert.type.any","assert.genericType($__placeholder__0)","$__placeholder__0 = $__placeholder__1"]}
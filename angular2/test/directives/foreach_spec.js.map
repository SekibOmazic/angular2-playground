{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/directives/foreach_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/26","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/27","angular2/test/directives/@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"angular2/test/directives/foreach_spec.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {\n  AsyncTestCompleter,\n  beforeEach,\n  beforeEachBindings,\n  ddescribe,\n  describe,\n  el,\n  expect,\n  iit,\n  inject,\n  it,\n  xit,\n} from 'angular2/test_lib';\n\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {ListWrapper} from 'angular2/src/facade/collection';\n\nimport {Injector} from 'angular2/di';\n\nimport {Compiler} from 'angular2/src/core/compiler/compiler';\nimport {TemplateResolver} from 'angular2/src/core/compiler/template_resolver';\n\nimport {Template} from 'angular2/src/core/annotations/template';\nimport {Decorator, Component, Viewport} from 'angular2/src/core/annotations/annotations';\n\nimport {MockTemplateResolver} from 'angular2/src/mock/template_resolver_mock';\n\nimport {Foreach} from 'angular2/src/directives/foreach';\n\nimport {bind} from 'angular2/di';\n\nexport function main() {\n  describe('foreach', () => {\n    var view, cd, compiler, component, tplResolver;\n\n    beforeEachBindings(() => [\n      bind(TemplateResolver).toClass(MockTemplateResolver),\n    ]);\n\n    beforeEach(inject([Compiler, TemplateResolver], (c, t) => {\n      compiler = c;\n      tplResolver = t;\n    }));\n\n    function createView(pv) {\n      component = new TestComponent();\n      view = pv.instantiate(null, null);\n      view.hydrate(new Injector([]), null, component);\n      cd = view.changeDetector;\n    }\n\n    function compileWithTemplate(html) {\n      var template = new Template({\n        inline: html,\n        directives: [Foreach]\n      });\n      tplResolver.setTemplate(TestComponent, template);\n      return compiler.compile(TestComponent);\n    }\n\n    var TEMPLATE = '<div><copy-me template=\"foreach #item in items\">{{item.toString()}};</copy-me></div>';\n\n    it('should reflect initial elements', inject([AsyncTestCompleter], (async) => {\n      compileWithTemplate(TEMPLATE).then((pv) => {\n        createView(pv);\n        cd.detectChanges();\n\n        expect(DOM.getText(view.nodes[0])).toEqual('1;2;');\n        async.done();\n      });\n    }));\n\n    it('should reflect added elements', inject([AsyncTestCompleter], (async) => {\n      compileWithTemplate(TEMPLATE).then((pv) => {\n        createView(pv);\n        cd.detectChanges();\n\n        ListWrapper.push(component.items, 3);\n        cd.detectChanges();\n\n        expect(DOM.getText(view.nodes[0])).toEqual('1;2;3;');\n        async.done();\n      });\n    }));\n\n    it('should reflect removed elements', inject([AsyncTestCompleter], (async) => {\n      compileWithTemplate(TEMPLATE).then((pv) => {\n        createView(pv);\n        cd.detectChanges();\n\n        ListWrapper.removeAt(component.items, 1);\n        cd.detectChanges();\n\n        expect(DOM.getText(view.nodes[0])).toEqual('1;');\n        async.done();\n      });\n    }));\n\n    it('should reflect moved elements', inject([AsyncTestCompleter], (async) => {\n      compileWithTemplate(TEMPLATE).then((pv) => {\n        createView(pv);\n        cd.detectChanges();\n\n        ListWrapper.removeAt(component.items, 0);\n        ListWrapper.push(component.items, 1);\n        cd.detectChanges();\n\n        expect(DOM.getText(view.nodes[0])).toEqual('2;1;');\n        async.done();\n      });\n    }));\n\n    it('should reflect a mix of all changes (additions/removals/moves)', inject([AsyncTestCompleter], (async) => {\n      compileWithTemplate(TEMPLATE).then((pv) => {\n        createView(pv);\n        component.items = [0, 1, 2, 3, 4, 5];\n        cd.detectChanges();\n\n        component.items = [6, 2, 7, 0, 4, 8];\n        cd.detectChanges();\n\n        expect(DOM.getText(view.nodes[0])).toEqual('6;2;7;0;4;8;');\n        async.done();\n      });\n    }));\n\n    it('should iterate over an array of objects', () => {\n      compileWithTemplate('<ul><li template=\"foreach #item in items\">{{item[\"name\"]}};</li></ul>').then((pv) => {\n        createView(pv);\n\n        // INIT\n        component.items = [{'name': 'misko'}, {'name':'shyam'}];\n        cd.detectChanges();\n        expect(DOM.getText(view.nodes[0])).toEqual('misko;shyam;');\n\n        // GROW\n        ListWrapper.push(component.items, {'name': 'adam'});\n        cd.detectChanges();\n\n        expect(DOM.getText(view.nodes[0])).toEqual('misko;shyam;adam;');\n\n        // SHRINK\n        ListWrapper.removeAt(component.items, 2);\n        ListWrapper.removeAt(component.items, 0);\n        cd.detectChanges();\n\n        expect(DOM.getText(view.nodes[0])).toEqual('shyam;');\n      });\n    });\n\n    it('should gracefully handle nulls', inject([AsyncTestCompleter], (async) => {\n      compileWithTemplate('<ul><li template=\"foreach #item in null\">{{item}};</li></ul>').then((pv) => {\n        createView(pv);\n        cd.detectChanges();\n        expect(DOM.getText(view.nodes[0])).toEqual('');\n        async.done();\n      });\n    }));\n\n    it('should gracefully handle ref changing to null and back', inject([AsyncTestCompleter], (async) => {\n      compileWithTemplate(TEMPLATE).then((pv) => {\n        createView(pv);\n        cd.detectChanges();\n        expect(DOM.getText(view.nodes[0])).toEqual('1;2;');\n\n        component.items = null;\n        cd.detectChanges();\n        expect(DOM.getText(view.nodes[0])).toEqual('');\n\n        component.items = [1, 2, 3];\n        cd.detectChanges();\n        expect(DOM.getText(view.nodes[0])).toEqual('1;2;3;');\n        async.done();\n      });\n    }));\n\n    it('should throw on ref changing to string', inject([AsyncTestCompleter], (async) => {\n      compileWithTemplate(TEMPLATE).then((pv) => {\n        createView(pv);\n        cd.detectChanges();\n        expect(DOM.getText(view.nodes[0])).toEqual('1;2;');\n\n        component.items = 'whaaa';\n        expect(() => cd.detectChanges()).toThrowError();\n        async.done();\n      });\n    }));\n\n    it('should works with duplicates', inject([AsyncTestCompleter], (async) => {\n      compileWithTemplate(TEMPLATE).then((pv) => {\n        createView(pv);\n        var a = new Foo();\n        component.items = [a, a];\n        cd.detectChanges();\n        expect(DOM.getText(view.nodes[0])).toEqual('foo;foo;');\n        async.done();\n      });\n    }));\n\n    it('should repeat over nested arrays', inject([AsyncTestCompleter], (async) => {\n      compileWithTemplate(\n          '<div><div template=\"foreach #item in items\">' +\n            '<div template=\"foreach #subitem in item\">' +\n            '{{subitem}};' +\n          '</div>|</div></div>'\n      ).then((pv) => {\n        createView(pv);\n        component.items = [['a', 'b'], ['c','d']];\n        cd.detectChanges();\n        cd.detectChanges();\n        cd.detectChanges();\n        expect(DOM.getText(view.nodes[0])).toEqual('a;b;|c;d;|');\n        async.done();\n      });\n    }));\n\n\n    it('should display indices correctly', inject([AsyncTestCompleter], (async) => {\n      var INDEX_TEMPLATE =\n        '<div><copy-me template=\"foreach: var item in items; var i=index\">{{i.toString()}}</copy-me></div>';\n      compileWithTemplate(INDEX_TEMPLATE).then((pv) => {\n        createView(pv);\n        component.items = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n        cd.detectChanges();\n        expect(DOM.getText(view.nodes[0])).toEqual('0123456789');\n\n        component.items = [1, 2, 6, 7, 4, 3, 5, 8, 9, 0];\n        cd.detectChanges();\n        expect(DOM.getText(view.nodes[0])).toEqual('0123456789');\n        async.done();\n      });\n    }));\n\n  });\n}\n\nclass Foo {\n  toString() {\n    return 'foo';\n  }\n}\n\n@Component({selector: 'test-cmp'})\nclass TestComponent {\n  items: any;\n  item: any;\n  constructor() {\n    this.items = [1, 2];\n  }\n}\n","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}
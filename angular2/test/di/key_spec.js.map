{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/di/key_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/26"],"names":[],"mappings":"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","file":"angular2/test/di/key_spec.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {describe, iit, it, expect, beforeEach} from 'angular2/test_lib';\nimport {Key, KeyRegistry} from 'angular2/di';\n\nexport function main() {\n  describe(\"key\", function () {\n    var registry;\n\n    beforeEach(function () {\n      registry = new KeyRegistry();\n    });\n\n    it('should be equal to another key if type is the same', function () {\n      expect(registry.get('car')).toBe(registry.get('car'));\n    });\n\n    it('should not be equal to another key if types are different', function () {\n      expect(registry.get('car')).not.toBe(registry.get('porsche'));\n    });\n\n    it('should return the passed in key', function () {\n      expect(registry.get(registry.get('car'))).toBe(registry.get('car'));\n    });\n\n    describe(\"metadata\", function () {\n      it(\"should assign metadata to a key\", function () {\n        var key = registry.get('car');\n\n        Key.setMetadata(key, \"meta\");\n\n        expect(key.metadata).toEqual(\"meta\");\n      });\n\n      it(\"should allow assigning the same metadata twice\", function () {\n        var key = registry.get('car');\n\n        Key.setMetadata(key, \"meta\");\n        Key.setMetadata(key, \"meta\");\n\n        expect(key.metadata).toEqual(\"meta\");\n      });\n\n      it(\"should throw when assigning different metadata\", function () {\n        var key = registry.get('car');\n\n        Key.setMetadata(key, \"meta1\");\n\n        expect(() => Key.setMetadata(key, \"meta2\")).toThrowError();\n      });\n    });\n  });\n}","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;"]}
{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/core/zone/vm_turn_zone_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/26"],"names":[],"mappings":"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","file":"angular2/test/core/zone/vm_turn_zone_spec.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  expect,\n  iit,\n  inject,\n  it,\n  xdescribe,\n  xit,\n} from 'angular2/test_lib';\nimport {Log, once} from 'angular2/test_lib';\nimport {PromiseWrapper} from 'angular2/src/facade/async';\nimport {BaseException} from 'angular2/src/facade/lang';\nimport {VmTurnZone} from 'angular2/src/core/zone/vm_turn_zone';\n\nexport function main() {\n  describe(\"VmTurnZone\", () => {\n    var log, zone;\n\n    beforeEach(() => {\n      log = new Log();\n      zone = new VmTurnZone({enableLongStackTrace: true});\n      zone.initCallbacks({\n        onTurnStart: log.fn('onTurnStart'),\n        onTurnDone: log.fn('onTurnDone')\n      });\n    });\n\n    describe(\"run\", () => {\n      it('should call onTurnStart and onTurnDone', () => {\n        zone.run(log.fn('run'));\n\n        expect(log.result()).toEqual('onTurnStart; run; onTurnDone');\n      });\n\n      it('should return the body return value from run', () => {\n        expect(zone.run(() => 6)).toEqual(6);\n      });\n\n      it('should not run onTurnStart and onTurnDone for nested Zone.run', () => {\n        zone.run(() => {\n          zone.run(log.fn('run'));\n        });\n        expect(log.result()).toEqual('onTurnStart; run; onTurnDone');\n      });\n\n\n      it('should call onTurnStart and onTurnDone before and after each top-level run', () => {\n        zone.run(log.fn('run1'));\n        zone.run(log.fn('run2'));\n\n        expect(log.result()).toEqual('onTurnStart; run1; onTurnDone; onTurnStart; run2; onTurnDone');\n      });\n\n\n      it('should call onTurnStart and onTurnDone before and after each turn', inject([AsyncTestCompleter], (async) => {\n        var a = PromiseWrapper.completer();\n        var b = PromiseWrapper.completer();\n\n        zone.run(() => {\n          log.add('run start');\n          a.promise.then((_) => log.add('a then'));\n          b.promise.then((_) => log.add('b then'));\n        });\n\n        a.resolve(\"a\");\n        b.resolve(\"b\");\n\n        PromiseWrapper.all([a.promise, b.promise]).then((_) => {\n          expect(log.result()).toEqual('onTurnStart; run start; onTurnDone; onTurnStart; a then; onTurnDone; onTurnStart; b then; onTurnDone');\n          async.done();\n        });\n      }));\n    });\n\n    describe(\"runOutsideAngular\", () => {\n      it(\"should run a function outside of the angular zone\", () => {\n        zone.runOutsideAngular(log.fn('run'));\n\n        expect(log.result()).toEqual('run');\n      });\n    });\n\n    describe(\"exceptions\", () => {\n      var trace, exception, saveStackTrace;\n      beforeEach(() => {\n        trace = null;\n        exception = null;\n        saveStackTrace = (e, t) => {\n          exception = e;\n          trace = t;\n        };\n      });\n\n      it('should call the on error callback when it is defined', () => {\n        zone.initCallbacks({onErrorHandler: saveStackTrace});\n\n        zone.run(() => {\n          throw new BaseException('aaa');\n        });\n\n        expect(exception).toBeDefined();\n      });\n\n      it('should rethrow exceptions from the body when no callback defined', () => {\n        expect(() => {\n          zone.run(() => {\n            throw new BaseException('bbb');\n          });\n        }).toThrowError('bbb');\n      });\n\n      it('should produce long stack traces', inject([AsyncTestCompleter], (async) => {\n        zone.initCallbacks({onErrorHandler: saveStackTrace});\n\n        var c = PromiseWrapper.completer();\n\n        zone.run(function () {\n          PromiseWrapper.setTimeout(function () {\n            PromiseWrapper.setTimeout(function () {\n              c.resolve(null);\n              throw new BaseException('ccc');\n            }, 0);\n          }, 0);\n        });\n\n        c.promise.then((_) => {\n          // then number of traces for JS and Dart is different\n          expect(trace.length).toBeGreaterThan(1);\n          async.done();\n        });\n      }));\n\n      it('should produce long stack traces (when using promises)', inject([AsyncTestCompleter], (async) => {\n        zone.initCallbacks({onErrorHandler: saveStackTrace});\n\n        var c = PromiseWrapper.completer();\n\n        zone.run(function () {\n          PromiseWrapper.resolve(null).then((_) => {\n            return PromiseWrapper.resolve(null).then((__) => {\n              c.resolve(null);\n              throw new BaseException(\"ddd\");\n            });\n          });\n        });\n\n        c.promise.then((_) => {\n          // then number of traces for JS and Dart is different\n          expect(trace.length).toBeGreaterThan(1);\n          async.done();\n        });\n      }));\n\n      it('should disable long stack traces', inject([AsyncTestCompleter], (async) => {\n        var zone = new VmTurnZone({enableLongStackTrace: false});\n        zone.initCallbacks({onErrorHandler: saveStackTrace});\n\n        var c = PromiseWrapper.completer();\n\n        zone.run(function () {\n          PromiseWrapper.setTimeout(function () {\n            PromiseWrapper.setTimeout(function () {\n              c.resolve(null);\n              throw new BaseException('ccc');\n            }, 0);\n          }, 0);\n        });\n\n        c.promise.then((_) => {\n          expect(trace.length).toEqual(1);\n          async.done();\n        });\n      }));\n    });\n  });\n}\n","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;"]}
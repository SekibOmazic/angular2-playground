{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/core/compiler/shadow_dom_strategy_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/26","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/13","angular2/test/core/compiler/@traceur/generated/TemplateParser/8","angular2/test/core/compiler/@traceur/generated/TemplateParser/7","angular2/test/core/compiler/@traceur/generated/TemplateParser/9","angular2/test/core/compiler/@traceur/generated/TemplateParser/25","angular2/test/core/compiler/@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/27"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/shadow_dom_strategy_spec.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  el,\n  expect,\n  iit,\n  inject,\n  it,\n  SpyObject,\n} from 'angular2/test_lib';\n\nimport {\n  NativeShadowDomStrategy,\n  EmulatedScopedShadowDomStrategy,\n  EmulatedUnscopedShadowDomStrategy,\n  resetShadowDomCache,\n} from 'angular2/src/core/compiler/shadow_dom_strategy';\nimport {UrlResolver} from 'angular2/src/core/compiler/url_resolver';\nimport {StyleUrlResolver} from 'angular2/src/core/compiler/style_url_resolver';\nimport {StyleInliner} from 'angular2/src/core/compiler/style_inliner';\nimport {ProtoView} from 'angular2/src/core/compiler/view';\nimport {DirectiveMetadata} from 'angular2/src/core/compiler/directive_metadata';\n\nimport {CompileElement} from 'angular2/src/core/compiler/pipeline/compile_element';\n\nimport {XHR} from 'angular2/src/core/compiler/xhr/xhr';\n\nimport {isPresent, isBlank} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {Map, MapWrapper} from 'angular2/src/facade/collection';\nimport {PromiseWrapper, Promise} from 'angular2/src/facade/async';\n\nimport {DynamicProtoChangeDetector} from 'angular2/change_detection';\n\nexport function main() {\n  var strategy;\n\n  describe('NativeShadowDomStratgey', () => {\n    beforeEach(() => {\n      var urlResolver = new UrlResolver();\n      var styleUrlResolver = new StyleUrlResolver(urlResolver);\n      strategy = new NativeShadowDomStrategy(styleUrlResolver);\n    });\n\n    it('should attach the view nodes to the shadow root', () => {\n      var host = el('<div></div>');\n      var nodes = el('<div>view</div>');\n      var pv = new ProtoView(nodes, new DynamicProtoChangeDetector(null), null);\n      var view = pv.instantiate(null, null);\n\n      strategy.attachTemplate(host, view);\n      var shadowRoot = DOM.getShadowRoot(host);\n      expect(isPresent(shadowRoot)).toBeTruthy();\n      expect(shadowRoot).toHaveText('view');\n    });\n\n    it('should should not transform template elements', () => {\n      expect(strategy.getTemplateCompileStep(null)).toBe(null);\n    });\n\n    it('should rewrite style urls', () => {\n      var step = strategy.getStyleCompileStep(null, 'http://base');\n      var styleElement = DOM.createStyleElement('.one {background-image: url(\"img.jpg\");}');\n      var compileElement = new CompileElement(styleElement);\n      step.process(null, compileElement, null);\n      expect(styleElement).toHaveText(\".one {background-image: url('http://base/img.jpg');}\");\n    });\n\n    it('should not inline import rules', () => {\n      var step = strategy.getStyleCompileStep(null, 'http://base');\n      var styleElement = DOM.createStyleElement('@import \"other.css\";');\n      var compileElement = new CompileElement(styleElement);\n      step.process(null, compileElement, null);\n      expect(styleElement).toHaveText(\"@import 'http://base/other.css';\");\n    });\n  });\n\n  describe('EmulatedScopedShadowDomStratgey', () => {\n    var xhr, styleHost;\n\n    beforeEach(() => {\n      var urlResolver = new UrlResolver();\n      var styleUrlResolver = new StyleUrlResolver(urlResolver);\n      xhr = new FakeXHR();\n      var styleInliner = new StyleInliner(xhr, styleUrlResolver, urlResolver);\n      styleHost = el('<div></div>');\n      strategy = new EmulatedScopedShadowDomStrategy(styleInliner, styleUrlResolver, styleHost);\n      resetShadowDomCache();\n    });\n\n    it('should attach the view nodes as child of the host element', () => {\n      var host = el('<div><span>original content</span></div>');\n      var nodes = el('<div>view</div>');\n      var pv = new ProtoView(nodes, new DynamicProtoChangeDetector(null), null);\n      var view = pv.instantiate(null, null);\n\n      strategy.attachTemplate(host, view);\n      var firstChild = DOM.firstChild(host);\n      expect(DOM.tagName(firstChild).toLowerCase()).toEqual('div');\n      expect(firstChild).toHaveText('view');\n      expect(host).toHaveText('view');\n    });\n\n    it('should rewrite style urls', () => {\n      var template = el('<div><style>.foo {background-image: url(\"img.jpg\");}</style></div>');\n      var cmpMetadata = new DirectiveMetadata(SomeComponent, null);\n      var step = strategy.getStyleCompileStep(cmpMetadata, 'http://base');\n      var styleElement = DOM.firstChild(template);\n      var compileElement = new CompileElement(styleElement);\n      step.process(null, compileElement, null);\n      expect(styleElement).toHaveText(\".foo[_ngcontent-0] {\\n\" +\n        \"background-image: url(http://base/img.jpg);\\n\" +\n        \"}\");\n    });\n\n    it('should scope styles', () => {\n      var template = el('<div><style>.foo {} :host {}</style></div>');\n      var cmpMetadata = new DirectiveMetadata(SomeComponent, null);\n      var step = strategy.getStyleCompileStep(cmpMetadata, 'http://base');\n      var styleElement = DOM.firstChild(template);\n      var compileElement = new CompileElement(styleElement);\n      step.process(null, compileElement, null);\n      expect(styleElement).toHaveText(\".foo[_ngcontent-0] {\\n\\n}\\n\\n[_nghost-0] {\\n\\n}\");\n    });\n\n    it('should inline @import rules', inject([AsyncTestCompleter], (async) => {\n      xhr.reply('http://base/one.css', '.one {}');\n\n      var template = el('<div><style>@import \"one.css\";</style></div>');\n      var cmpMetadata = new DirectiveMetadata(SomeComponent, null);\n      var step = strategy.getStyleCompileStep(cmpMetadata, 'http://base');\n      var styleElement = DOM.firstChild(template);\n      var parentElement = new CompileElement(template);\n      var compileElement = new CompileElement(styleElement);\n      var parentpv = new ProtoView(null, null, null);\n      parentElement.inheritedProtoView = parentpv;\n      step.process(parentElement, compileElement, null);\n\n      expect(parentpv.stylePromises.length).toEqual(1);\n      expect(parentpv.stylePromises[0]).toBePromise();\n\n      expect(styleElement).toHaveText('');\n      parentpv.stylePromises[0].then((_) => {\n        expect(styleElement).toHaveText('.one[_ngcontent-0] {\\n\\n}');\n        async.done();\n      });\n    }));\n\n    it('should return the same style given the same component', () => {\n      var template = el('<div><style>.foo {} :host {}</style></div>');\n      var cmpMetadata = new DirectiveMetadata(SomeComponent, null);\n      var step = strategy.getStyleCompileStep(cmpMetadata, 'http://base');\n      var styleElement = DOM.firstChild(template);\n      var compileElement = new CompileElement(styleElement);\n      step.process(null, compileElement, null);\n\n      var template2 = el('<div><style>.foo {} :host {}</style></div>');\n      var step2 = strategy.getStyleCompileStep(cmpMetadata, 'http://base');\n      var styleElement2 = DOM.firstChild(template2);\n      var compileElement2 = new CompileElement(styleElement2);\n      step2.process(null, compileElement2, null);\n\n      expect(DOM.getText(styleElement)).toEqual(DOM.getText(styleElement2));\n    });\n\n    it('should return different styles given different components', () => {\n      var template = el('<div><style>.foo {} :host {}</style></div>');\n      var cmpMetadata = new DirectiveMetadata(SomeComponent, null);\n      var step = strategy.getStyleCompileStep(cmpMetadata, 'http://base');\n      var styleElement = DOM.firstChild(template);\n      var compileElement = new CompileElement(styleElement);\n      step.process(null, compileElement, null);\n\n      var template2 = el('<div><style>.foo {} :host {}</style></div>');\n      var cmpMetadata2 = new DirectiveMetadata(SomeOtherComponent, null);\n      var step2 = strategy.getStyleCompileStep(cmpMetadata2, 'http://base');\n      var styleElement2 = DOM.firstChild(template2);\n      var compileElement2 = new CompileElement(styleElement2);\n      step2.process(null, compileElement2, null);\n\n      expect(DOM.getText(styleElement)).not.toEqual(DOM.getText(styleElement2));\n    });\n\n    it('should move the style element to the style host', () => {\n      var template = el('<div><style>.one {}</style></div>');\n      var cmpMetadata = new DirectiveMetadata(SomeComponent, null);\n      var step = strategy.getStyleCompileStep(cmpMetadata, 'http://base');\n      var styleElement = DOM.firstChild(template);\n      var compileElement = new CompileElement(styleElement);\n      step.process(null, compileElement, null);\n      expect(template).toHaveText('');\n      expect(styleHost).toHaveText('.one[_ngcontent-0] {\\n\\n}');\n    });\n\n    it('should add an attribute to the content elements', () => {\n      var template = el('<div></div>');\n      var cmpMetadata = new DirectiveMetadata(SomeComponent, null);\n      var step = strategy.getTemplateCompileStep(cmpMetadata);\n      var compileElement = new CompileElement(template);\n      step.process(null, compileElement, null);\n      expect(DOM.getAttribute(template, '_ngcontent-0')).toEqual('');\n    });\n\n    it('should add an attribute to the host elements', () => {\n      var template = el('<div></div>');\n      var cmpMetadata = new DirectiveMetadata(SomeComponent, null);\n      var step = strategy.getTemplateCompileStep(cmpMetadata);\n      var compileElement = new CompileElement(template);\n      compileElement.componentDirective = new DirectiveMetadata(SomeOtherComponent, null);\n      step.process(null, compileElement, null);\n      expect(DOM.getAttribute(template, '_nghost-1')).toEqual('');\n    });\n  });\n\n  describe('EmulatedUnscopedShadowDomStratgey', () => {\n    var styleHost;\n\n    beforeEach(() => {\n      var urlResolver = new UrlResolver();\n      var styleUrlResolver = new StyleUrlResolver(urlResolver);\n      styleHost = el('<div></div>');\n      strategy = new EmulatedUnscopedShadowDomStrategy(styleUrlResolver, styleHost);\n      resetShadowDomCache();\n    });\n\n    it('should attach the view nodes as child of the host element', () => {\n      var host = el('<div><span>original content</span></div>');\n      var nodes = el('<div>view</div>');\n      var pv = new ProtoView(nodes, new DynamicProtoChangeDetector(null), null);\n      var view = pv.instantiate(null, null);\n\n      strategy.attachTemplate(host, view);\n      var firstChild = DOM.firstChild(host);\n      expect(DOM.tagName(firstChild).toLowerCase()).toEqual('div');\n      expect(firstChild).toHaveText('view');\n      expect(host).toHaveText('view');\n    });\n\n    it('should rewrite style urls', () => {\n      var template = el('<div><style>.one {background-image: url(\"img.jpg\");}</style></div>')\n      var step = strategy.getStyleCompileStep(null, 'http://base');\n      var styleElement = DOM.firstChild(template);\n      var compileElement = new CompileElement(styleElement);\n      step.process(null, compileElement, null);\n      expect(styleElement).toHaveText(\".one {background-image: url('http://base/img.jpg');}\");\n    });\n\n    it('should not inline import rules', () => {\n      var template = el('<div><style>@import \"other.css\";</style></div>')\n      var step = strategy.getStyleCompileStep(null, 'http://base');\n      var styleElement = DOM.firstChild(template);\n      var compileElement = new CompileElement(styleElement);\n      step.process(null, compileElement, null);\n      expect(styleElement).toHaveText(\"@import 'http://base/other.css';\");\n    });\n\n    it('should move the style element to the style host', () => {\n      var template = el('<div><style>/*css*/</style></div>')\n      var step = strategy.getStyleCompileStep(null, 'http://base');\n      var styleElement = DOM.firstChild(template);\n      var compileElement = new CompileElement(styleElement);\n      step.process(null, compileElement, null);\n      expect(styleHost).toHaveText(\"/*css*/\");\n    });\n\n    it('should insert the same style only once in the style host', () => {\n      var template = el('<div><style>/*css1*/</style><style>/*css2*/</style>' +\n                        '<style>/*css1*/</style></div>')\n      var step = strategy.getStyleCompileStep(null, 'http://base');\n      var styleElements = DOM.childNodes(template);\n      var compileElement = new CompileElement(styleElements[0]);\n      step.process(null, compileElement, null);\n      compileElement = new CompileElement(styleElements[0]);\n      step.process(null, compileElement, null);\n      compileElement = new CompileElement(styleElements[0]);\n      step.process(null, compileElement, null);\n\n      expect(styleHost).toHaveText(\"/*css1*//*css2*/\");\n    });\n  });\n}\n\nclass FakeXHR extends XHR {\n  _responses: Map;\n\n  constructor() {\n    super();\n    this._responses = MapWrapper.create();\n  }\n\n  get(url: string): Promise<string> {\n    var response = MapWrapper.get(this._responses, url);\n    if (isBlank(response)) {\n      return PromiseWrapper.reject('xhr error');\n    }\n\n    return PromiseWrapper.resolve(response);\n  }\n\n  reply(url: string, response: string) {\n    MapWrapper.set(this._responses, url, response);\n  }\n}\n\nclass SomeComponent {}\nclass SomeOtherComponent {}\n","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.genericType($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()"]}
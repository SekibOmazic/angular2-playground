{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/core/compiler/url_resolver_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/26"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/url_resolver_spec.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {describe, it, expect, beforeEach, ddescribe, iit, xit, el} from 'angular2/test_lib';\nimport {UrlResolver} from 'angular2/src/core/compiler/url_resolver';\n\nexport function main() {\n  describe('UrlResolver', () => {\n    var resolver = new UrlResolver();\n\n    it('should add a relative path to the base url', () => {\n      expect(resolver.resolve('http://www.foo.com', 'bar')).toEqual('http://www.foo.com/bar');\n      expect(resolver.resolve('http://www.foo.com/', 'bar')).toEqual('http://www.foo.com/bar');\n      expect(resolver.resolve('http://www.foo.com', './bar')).toEqual('http://www.foo.com/bar');\n      expect(resolver.resolve('http://www.foo.com/', './bar')).toEqual('http://www.foo.com/bar');\n    });\n\n    it('should replace the base path', () => {\n      expect(resolver.resolve('http://www.foo.com/baz', 'bar')).toEqual('http://www.foo.com/bar');\n      expect(resolver.resolve('http://www.foo.com/baz', './bar')).toEqual('http://www.foo.com/bar');\n    });\n\n    it('should append to the base path', () => {\n      expect(resolver.resolve('http://www.foo.com/baz/', 'bar')).toEqual('http://www.foo.com/baz/bar');\n      expect(resolver.resolve('http://www.foo.com/baz/', './bar')).toEqual('http://www.foo.com/baz/bar');\n    });\n\n    it('should support \"..\" in the path', () => {\n      expect(resolver.resolve('http://www.foo.com/baz/', '../bar')).toEqual('http://www.foo.com/bar');\n      expect(resolver.resolve('http://www.foo.com/1/2/3/', '../../bar')).toEqual('http://www.foo.com/1/bar');\n      expect(resolver.resolve('http://www.foo.com/1/2/3/', '../biz/bar')).toEqual('http://www.foo.com/1/2/biz/bar');\n      expect(resolver.resolve('http://www.foo.com/1/2/baz', '../../bar')).toEqual('http://www.foo.com/bar');\n    });\n\n    it('should ignore the base path when the url has a scheme', () => {\n      expect(resolver.resolve('http://www.foo.com', 'http://www.bar.com')).toEqual('http://www.bar.com');\n    })\n\n    it('should throw when the url start with \"/\"', () => {\n      expect(() => {\n        resolver.resolve('http://www.foo.com/1/2', '/test');\n      }).toThrowError();\n    });\n  });\n}\n","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;"]}
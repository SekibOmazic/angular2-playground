{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/core/compiler/pipeline/view_splitter_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/26"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/pipeline/view_splitter_spec.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {describe, beforeEach, it, expect, iit, ddescribe, el} from 'angular2/test_lib';\nimport {MapWrapper} from 'angular2/src/facade/collection';\n\nimport {ViewSplitter} from 'angular2/src/core/compiler/pipeline/view_splitter';\nimport {CompilePipeline} from 'angular2/src/core/compiler/pipeline/compile_pipeline';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {Lexer, Parser} from 'angular2/change_detection';\n\nexport function main() {\n  describe('ViewSplitter', () => {\n\n    function createPipeline() {\n      return new CompilePipeline([new ViewSplitter(new Parser(new Lexer()))]);\n    }\n\n    it('should mark root elements as viewRoot', () => {\n      var rootElement = el('<div></div>');\n      var results = createPipeline().process(rootElement);\n      expect(results[0].isViewRoot).toBe(true);\n    });\n\n    describe('<template> elements', () => {\n\n      it('should move the content into a new <template> element and mark that as viewRoot', () => {\n        var rootElement = el('<div><template if=\"true\">a</template></div>');\n        var results = createPipeline().process(rootElement);\n\n        expect(DOM.getOuterHTML(results[1].element)).toEqual('<template if=\"true\"></template>');\n        expect(results[1].isViewRoot).toBe(false);\n        expect(DOM.getOuterHTML(results[2].element)).toEqual('<template>a</template>');\n        expect(results[2].isViewRoot).toBe(true);\n      });\n\n      it('should not wrap a root <template> element', () => {\n        var rootElement = el('<div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results.length).toBe(1);\n        expect(DOM.getOuterHTML(rootElement)).toEqual('<div></div>');\n      });\n\n    });\n\n    describe('elements with template attribute', () => {\n\n      it('should replace the element with an empty <template> element', () => {\n        var rootElement = el('<div><span template=\"\"></span></div>');\n        var originalChild = rootElement.childNodes[0];\n        var results = createPipeline().process(rootElement);\n        expect(results[0].element).toBe(rootElement);\n        expect(DOM.getOuterHTML(results[0].element)).toEqual('<div><template></template></div>');\n        expect(DOM.getOuterHTML(results[2].element)).toEqual('<span template=\"\"></span>')\n        expect(results[2].element).toBe(originalChild);\n      });\n\n      it('should mark the element as viewRoot', () => {\n        var rootElement = el('<div><div template></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].isViewRoot).toBe(true);\n      });\n\n      it('should work with top-level template node', () => {\n        var rootElement = DOM.createTemplate('<div template>x</div>');\n        var originalChild = DOM.content(rootElement).childNodes[0];\n        var results = createPipeline().process(rootElement);\n\n        expect(results[0].element).toBe(rootElement);\n        expect(results[0].isViewRoot).toBe(true);\n        expect(results[2].isViewRoot).toBe(true);\n        expect(DOM.getOuterHTML(results[0].element)).toEqual('<template><template></template></template>');\n        expect(results[2].element).toBe(originalChild);\n      });\n\n      it('should add property bindings from the template attribute', () => {\n        var rootElement = el('<div><div template=\"prop:expr\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(MapWrapper.get(results[1].propertyBindings, 'prop').source).toEqual('expr');\n      });\n\n      it('should add variable mappings from the template attribute', () => {\n        var rootElement = el('<div><div template=\"var varName=mapName\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[1].variableBindings).toEqual(MapWrapper.createFromStringMap({'mapName': 'varName'}));\n      });\n\n      it('should add entries without value as attribute to the element', () => {\n        var rootElement = el('<div><div template=\"varname\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[1].attrs()).toEqual(MapWrapper.createFromStringMap({'varname': ''}));\n        expect(results[1].propertyBindings).toBe(null);\n        expect(results[1].variableBindings).toBe(null);\n      });\n\n      it('should iterate properly after a template dom modification', () => {\n        var rootElement = el('<div><div template></div><after></after></div>');\n        var results = createPipeline().process(rootElement);\n        // 1 root + 2 initial + 1 generated template elements\n        expect(results.length).toEqual(4);\n      });\n\n    });\n\n    describe('elements with *directive_name attribute', () => {\n\n      it('should replace the element with an empty <template> element', () => {\n        var rootElement = el('<div><span *if></span></div>');\n        var originalChild = rootElement.childNodes[0];\n        var results = createPipeline().process(rootElement);\n        expect(results[0].element).toBe(rootElement);\n        expect(DOM.getOuterHTML(results[0].element)).toEqual('<div><template if=\"\"></template></div>');\n        expect(DOM.getOuterHTML(results[2].element)).toEqual('<span *if=\"\"></span>')\n        expect(results[2].element).toBe(originalChild);\n      });\n\n      it('should mark the element as viewRoot', () => {\n        var rootElement = el('<div><div *foo=\"bar\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].isViewRoot).toBe(true);\n      });\n\n      it('should work with top-level template node', () => {\n        var rootElement = DOM.createTemplate('<div *foo>x</div>');\n        var originalChild = DOM.content(rootElement).childNodes[0];\n        var results = createPipeline().process(rootElement);\n\n        expect(results[0].element).toBe(rootElement);\n        expect(results[0].isViewRoot).toBe(true);\n        expect(results[2].isViewRoot).toBe(true);\n        expect(DOM.getOuterHTML(results[0].element)).toEqual('<template><template foo=\"\"></template></template>');\n        expect(results[2].element).toBe(originalChild);\n      });\n\n      it('should add property bindings from the template attribute', () => {\n        var rootElement = el('<div><div *prop=\"expr\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(MapWrapper.get(results[1].propertyBindings, 'prop').source).toEqual('expr');\n      });\n\n      it('should add variable mappings from the template attribute', () => {\n        var rootElement = el('<div><div *foreach=\"var varName=mapName\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[1].variableBindings).toEqual(MapWrapper.createFromStringMap({'mapName': 'varName'}));\n      });\n\n      it('should add entries without value as attribute to the element', () => {\n        var rootElement = el('<div><div *varname></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[1].attrs()).toEqual(MapWrapper.createFromStringMap({'varname': ''}));\n        expect(results[1].propertyBindings).toBe(null);\n        expect(results[1].variableBindings).toBe(null);\n      });\n\n      it('should iterate properly after a template dom modification', () => {\n        var rootElement = el('<div><div *foo></div><after></after></div>');\n        var results = createPipeline().process(rootElement);\n        // 1 root + 2 initial + 1 generated template elements\n        expect(results.length).toEqual(4);\n      });\n\n      it('should not allow multiple template directives on the same element', () => {\n        expect( () => {\n          var rootElement = el('<div><div *foo *bar=\"blah\"></div></div>');\n          createPipeline().process(rootElement);\n        }).toThrowError('Only one template directive per element is allowed: foo and bar cannot be used simultaneously in <div *foo *bar=\"blah\">');\n      });\n\n      it('should not allow template and star directives on the same element', () => {\n        expect( () => {\n          var rootElement = el('<div><div *foo template=\"bar\"></div></div>');\n          createPipeline().process(rootElement);\n        }).toThrowError('Only one template directive per element is allowed: bar and foo cannot be used simultaneously in <div *foo template=\"bar\">');\n      });\n\n    });\n\n  });\n}\n","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;"]}
{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/core/compiler/pipeline/pipeline_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/26","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/13","angular2/test/core/compiler/pipeline/@traceur/generated/TemplateParser/8","angular2/test/core/compiler/pipeline/@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/7"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/pipeline/pipeline_spec.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {describe, beforeEach, it, expect, iit, ddescribe, el} from 'angular2/test_lib';\nimport {ListWrapper, List, MapWrapper} from 'angular2/src/facade/collection';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {isPresent, NumberWrapper, StringWrapper} from 'angular2/src/facade/lang';\n\nimport {CompilePipeline} from 'angular2/src/core/compiler/pipeline/compile_pipeline';\nimport {CompileElement} from 'angular2/src/core/compiler/pipeline/compile_element';\nimport {CompileStep} from 'angular2/src/core/compiler/pipeline/compile_step'\nimport {CompileControl} from 'angular2/src/core/compiler/pipeline/compile_control';\n\nexport function main() {\n  describe('compile_pipeline', () => {\n    describe('children compilation', () => {\n      it('should walk the tree in depth first order including template contents', () => {\n        var element = el('<div id=\"1\"><template id=\"2\"><span id=\"3\"></span></template></div>');\n\n        var step0Log = [];\n        var results = new CompilePipeline([createLoggerStep(step0Log)]).process(element);\n\n        expect(step0Log).toEqual(['1', '1<2', '2<3']);\n        expect(resultIdLog(results)).toEqual(['1', '2', '3']);\n      });\n\n      it('should stop walking the tree when compileChildren is false', () => {\n        var element = el('<div id=\"1\"><template id=\"2\" ignore-children><span id=\"3\"></span></template></div>');\n\n        var step0Log = [];\n        var pipeline = new CompilePipeline([new IgnoreChildrenStep(), createLoggerStep(step0Log)]);\n        var results = pipeline.process(element);\n\n        expect(step0Log).toEqual(['1', '1<2']);\n        expect(resultIdLog(results)).toEqual(['1', '2']);\n      });\n    });\n\n    describe('control.addParent', () => {\n      it('should report the new parent to the following processor and the result', () => {\n        var element = el('<div id=\"1\"><span wrap0=\"1\" id=\"2\"><b id=\"3\"></b></span></div>');\n        var step0Log = [];\n        var step1Log = [];\n        var pipeline = new CompilePipeline([\n          createWrapperStep('wrap0', step0Log),\n          createLoggerStep(step1Log)\n        ]);\n        var result = pipeline.process(element);\n        expect(step0Log).toEqual(['1', '1<2', '2<3']);\n        expect(step1Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<2', '2<3']);\n        expect(resultIdLog(result)).toEqual(['1', 'wrap0#0', '2', '3']);\n      });\n\n      it('should allow to add a parent by multiple processors to the same element', () => {\n        var element = el('<div id=\"1\"><span wrap0=\"1\" wrap1=\"1\" id=\"2\"><b id=\"3\"></b></span></div>');\n        var step0Log = [];\n        var step1Log = [];\n        var step2Log = [];\n        var pipeline = new CompilePipeline([\n          createWrapperStep('wrap0', step0Log),\n          createWrapperStep('wrap1', step1Log),\n          createLoggerStep(step2Log)\n        ]);\n        var result = pipeline.process(element);\n        expect(step0Log).toEqual(['1', '1<2', '2<3']);\n        expect(step1Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<2', '2<3']);\n        expect(step2Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<wrap1#0', 'wrap1#0<2', '2<3']);\n        expect(resultIdLog(result)).toEqual(['1', 'wrap0#0', 'wrap1#0', '2', '3']);\n      });\n\n      it('should allow to add a parent by multiple processors to different elements', () => {\n        var element = el('<div id=\"1\"><span wrap0=\"1\" id=\"2\"><b id=\"3\" wrap1=\"1\"></b></span></div>');\n        var step0Log = [];\n        var step1Log = [];\n        var step2Log = [];\n        var pipeline = new CompilePipeline([\n          createWrapperStep('wrap0', step0Log),\n          createWrapperStep('wrap1', step1Log),\n          createLoggerStep(step2Log)\n        ]);\n        var result = pipeline.process(element);\n        expect(step0Log).toEqual(['1', '1<2', '2<3']);\n        expect(step1Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<2', '2<3']);\n        expect(step2Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<2', '2<wrap1#0', 'wrap1#0<3']);\n        expect(resultIdLog(result)).toEqual(['1', 'wrap0#0', '2', 'wrap1#0', '3']);\n      });\n\n      it('should allow to add multiple parents by the same processor', () => {\n        var element = el('<div id=\"1\"><span wrap0=\"2\" id=\"2\"><b id=\"3\"></b></span></div>');\n        var step0Log = [];\n        var step1Log = [];\n        var pipeline = new CompilePipeline([\n          createWrapperStep('wrap0', step0Log),\n          createLoggerStep(step1Log)\n        ]);\n        var result = pipeline.process(element);\n        expect(step0Log).toEqual(['1', '1<2', '2<3']);\n        expect(step1Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<wrap0#1', 'wrap0#1<2', '2<3']);\n        expect(resultIdLog(result)).toEqual(['1', 'wrap0#0', 'wrap0#1', '2', '3']);\n      });\n\n    });\n\n    describe('control.addChild', () => {\n      it('should report the new child to all processors and the result', () => {\n        var element = el('<div id=\"1\"><div id=\"2\"></div></div>');\n        var resultLog = [];\n        var newChild = new CompileElement(el('<div id=\"3\"></div>'));\n        var pipeline = new CompilePipeline([\n          new MockStep((parent, current, control) => {\n            if (StringWrapper.equals(DOM.getAttribute(current.element, 'id'), '1')) {\n              control.addChild(newChild);\n            }\n          }),\n          createLoggerStep(resultLog)\n        ]);\n        var result = pipeline.process(element);\n        expect(result[2]).toBe(newChild);\n        expect(resultLog).toEqual(['1', '1<2', '1<3']);\n        expect(resultIdLog(result)).toEqual(['1', '2', '3']);\n      });\n    });\n\n  });\n}\n\nclass MockStep extends CompileStep {\n  processClosure:Function;\n  constructor(process) {\n    super();\n    this.processClosure = process;\n  }\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    this.processClosure(parent, current, control);\n  }\n}\n\nexport class IgnoreChildrenStep extends CompileStep {\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    var attributeMap = DOM.attributeMap(current.element);\n    if (MapWrapper.contains(attributeMap, 'ignore-children')) {\n      current.compileChildren = false;\n    }\n  }\n}\n\nfunction logEntry(log, parent, current) {\n  var parentId = '';\n  if (isPresent(parent)) {\n    parentId = DOM.getAttribute(parent.element, 'id') + '<';\n  }\n  ListWrapper.push(log, parentId + DOM.getAttribute(current.element, 'id'));\n}\n\nfunction createLoggerStep(log) {\n  return new MockStep((parent, current, control) => {\n    logEntry(log, parent, current);\n  });\n}\n\nfunction createWrapperStep(wrapperId, log) {\n  var nextElementId = 0;\n  return new MockStep((parent, current, control) => {\n    var parentCountStr = DOM.getAttribute(current.element, wrapperId);\n    if (isPresent(parentCountStr)) {\n      var parentCount = NumberWrapper.parseInt(parentCountStr, 10);\n      while (parentCount > 0) {\n        control.addParent(new CompileElement(el(`<a id=\"${wrapperId}#${nextElementId++}\"></a>`)));\n        parentCount--;\n      }\n    }\n    logEntry(log, parent, current);\n  });\n}\n\nfunction resultIdLog(result) {\n  var idLog = [];\n  ListWrapper.forEach(result, (current) => {\n    logEntry(idLog, null, current);\n  });\n  return idLog;\n}","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","assert.argumentTypes($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","$traceurRuntime.superConstructor(\n          $__placeholder__0).apply(this, arguments)"]}
{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/core/compiler/view_spec.js","angular2/test/core/compiler/@traceur/generated/TemplateParser/8","angular2/test/core/compiler/@traceur/generated/TemplateParser/3596","angular2/test/core/compiler/@traceur/generated/TemplateParser/10","angular2/test/core/compiler/@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/26","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/27","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/13","angular2/test/core/compiler/@traceur/generated/TemplateParser/9"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/view_spec.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {describe, xit, it, expect, beforeEach, ddescribe, iit, el, proxy, IS_NODEJS} from 'angular2/test_lib';\nimport {ProtoView, ElementPropertyMemento, DirectivePropertyMemento} from 'angular2/src/core/compiler/view';\nimport {ProtoElementInjector, ElementInjector, DirectiveBinding} from 'angular2/src/core/compiler/element_injector';\nimport {EmulatedScopedShadowDomStrategy, NativeShadowDomStrategy} from 'angular2/src/core/compiler/shadow_dom_strategy';\nimport {DirectiveMetadataReader} from 'angular2/src/core/compiler/directive_metadata_reader';\nimport {Component, Decorator, Viewport, Directive, onChange} from 'angular2/src/core/annotations/annotations';\nimport {Lexer, Parser, DynamicProtoChangeDetector,\n  ChangeDetector} from 'angular2/change_detection';\nimport {EventEmitter} from 'angular2/src/core/annotations/di';\nimport {List, MapWrapper} from 'angular2/src/facade/collection';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {int, IMPLEMENTS} from 'angular2/src/facade/lang';\nimport {Injector} from 'angular2/di';\nimport {View} from 'angular2/src/core/compiler/view';\nimport {ViewContainer} from 'angular2/src/core/compiler/view_container';\nimport {VmTurnZone} from 'angular2/src/core/zone/vm_turn_zone';\nimport {EventManager, DomEventsPlugin} from 'angular2/src/core/events/event_manager';\nimport {reflector} from 'angular2/src/reflection/reflection';\n\n@proxy\n@IMPLEMENTS(ViewContainer)\nclass FakeViewContainer {\n  templateElement;\n\n  constructor(templateElement) {\n    this.templateElement = templateElement;\n  }\n\n  noSuchMethod(i) {\n    super.noSuchMethod(i);\n  }\n}\n\n@proxy\n@IMPLEMENTS(View)\nclass FakeView {\n  noSuchMethod(i) {\n    super.noSuchMethod(i);\n  }\n}\n\nexport function main() {\n  describe('view', function() {\n    var parser, someComponentDirective, someViewportDirective;\n\n    function createView(protoView, eventManager: EventManager = null) {\n      var ctx = new MyEvaluationContext();\n      var view = protoView.instantiate(null, eventManager);\n      view.hydrate(null, null, ctx);\n      return view;\n    }\n\n    beforeEach(() => {\n      parser = new Parser(new Lexer());\n      someComponentDirective = new DirectiveMetadataReader().read(SomeComponent);\n      someViewportDirective = new DirectiveMetadataReader().read(SomeViewport);\n    });\n\n    describe('instantiated from protoView', () => {\n      var view;\n      beforeEach(() => {\n        var pv = new ProtoView(el('<div id=\"1\"></div>'), new DynamicProtoChangeDetector(null), null);\n        view = pv.instantiate(null, null);\n      });\n\n      it('should be dehydrated by default', () => {\n        expect(view.hydrated()).toBe(false);\n      });\n\n      it('should be able to be hydrated and dehydrated', () => {\n        var ctx = new Object();\n        view.hydrate(null, null, ctx);\n        expect(view.hydrated()).toBe(true);\n\n        view.dehydrate();\n        expect(view.hydrated()).toBe(false);\n      });\n\n      it('should hydrate and dehydrate the change detector', () => {\n        var ctx = new Object();\n        view.hydrate(null, null, ctx);\n        expect(view.changeDetector.hydrated()).toBe(true);\n\n        view.dehydrate();\n        expect(view.changeDetector.hydrated()).toBe(false);\n      });\n\n      it('should use the view pool to reuse views', () => {\n        var pv = new ProtoView(el('<div id=\"1\"></div>'), new DynamicProtoChangeDetector(null), null);\n        var fakeView = new FakeView();\n        pv.returnToPool(fakeView);\n\n        expect(pv.instantiate(null, null)).toBe(fakeView);\n      });\n    });\n\n    describe('with locals', function() {\n      var view;\n      beforeEach(() => {\n        var pv = new ProtoView(el('<div id=\"1\"></div>'), new DynamicProtoChangeDetector(null), null);\n        pv.bindVariable('context-foo', 'template-foo');\n        view = createView(pv);\n      });\n\n      it('should support setting of declared locals', () => {\n        view.setLocal('context-foo', 'bar');\n        expect(view.context.get('template-foo')).toBe('bar');\n      });\n\n      it('should not throw on undeclared locals', () => {\n        expect(() => view.setLocal('setMePlease', 'bar')).not.toThrow();\n      });\n\n      it('when dehydrated should set locals to null', () => {\n        view.setLocal('context-foo', 'bar');\n        view.dehydrate();\n        view.hydrate(null, null, new Object());\n        expect(view.context.get('template-foo')).toBe(null);\n      });\n\n      it('should throw when trying to set on dehydrated view', () => {\n        view.dehydrate();\n        expect(() => view.setLocal('context-foo', 'bar')).toThrowError();\n      });\n    });\n\n    describe('instantiated and hydrated', function() {\n\n      function createCollectDomNodesTestCases(useTemplateElement:boolean) {\n\n        function templateAwareCreateElement(html) {\n          return el(useTemplateElement ? `<template>${html}</template>` : html);\n        }\n\n        it('should collect the root node in the ProtoView element', () => {\n          var pv = new ProtoView(templateAwareCreateElement('<div id=\"1\"></div>'),\n            new DynamicProtoChangeDetector(null), null);\n          var view = pv.instantiate(null, null);\n          view.hydrate(null, null, null);\n          expect(view.nodes.length).toBe(1);\n          expect(DOM.getAttribute(view.nodes[0], 'id')).toEqual('1');\n        });\n\n        describe('collect elements with property bindings', () => {\n\n          it('should collect property bindings on the root element if it has the ng-binding class', () => {\n            var pv = new ProtoView(templateAwareCreateElement('<div [prop]=\"a\" class=\"ng-binding\"></div>'),\n              new DynamicProtoChangeDetector(null), null);\n            pv.bindElement(null);\n            pv.bindElementProperty(parser.parseBinding('a', null), 'prop', reflector.setter('prop'));\n\n            var view = pv.instantiate(null, null);\n            view.hydrate(null, null, null);\n            expect(view.bindElements.length).toEqual(1);\n            expect(view.bindElements[0]).toBe(view.nodes[0]);\n          });\n\n          it('should collect property bindings on child elements with ng-binding class', () => {\n            var pv = new ProtoView(templateAwareCreateElement('<div><span></span><span class=\"ng-binding\"></span></div>'),\n              new DynamicProtoChangeDetector(null), null);\n            pv.bindElement(null);\n            pv.bindElementProperty(parser.parseBinding('b', null), 'a', reflector.setter('a'));\n\n            var view = pv.instantiate(null, null);\n            view.hydrate(null, null, null);\n            expect(view.bindElements.length).toEqual(1);\n            expect(view.bindElements[0]).toBe(view.nodes[0].childNodes[1]);\n          });\n\n        });\n\n        describe('collect text nodes with bindings', () => {\n\n          it('should collect text nodes under the root element', () => {\n            var pv = new ProtoView(templateAwareCreateElement('<div class=\"ng-binding\">{{}}<span></span>{{}}</div>'),\n              new DynamicProtoChangeDetector(null), null);\n            pv.bindElement(null);\n            pv.bindTextNode(0, parser.parseBinding('a', null));\n            pv.bindTextNode(2, parser.parseBinding('b', null));\n\n            var view = pv.instantiate(null, null);\n            view.hydrate(null, null, null);\n            expect(view.textNodes.length).toEqual(2);\n            expect(view.textNodes[0]).toBe(view.nodes[0].childNodes[0]);\n            expect(view.textNodes[1]).toBe(view.nodes[0].childNodes[2]);\n          });\n\n          it('should collect text nodes with bindings on child elements with ng-binding class', () => {\n            var pv = new ProtoView(templateAwareCreateElement('<div><span> </span><span class=\"ng-binding\">{{}}</span></div>'),\n              new DynamicProtoChangeDetector(null), null);\n            pv.bindElement(null);\n            pv.bindTextNode(0, parser.parseBinding('b', null));\n\n            var view = pv.instantiate(null, null);\n            view.hydrate(null, null, null);\n            expect(view.textNodes.length).toEqual(1);\n            expect(view.textNodes[0]).toBe(view.nodes[0].childNodes[1].childNodes[0]);\n          });\n\n        });\n      }\n\n      describe('inplace instantiation', () => {\n        it('should be supported.', () => {\n          var template = el('<div></div>');\n          var pv = new ProtoView(template, new DynamicProtoChangeDetector(null),\n            new NativeShadowDomStrategy(null));\n          pv.instantiateInPlace = true;\n          var view = pv.instantiate(null, null);\n          view.hydrate(null, null, null);\n          expect(view.nodes[0]).toBe(template);\n        });\n\n        it('should be off by default.', () => {\n          var template = el('<div></div>')\n          var pv = new ProtoView(template, new DynamicProtoChangeDetector(null),\n            new NativeShadowDomStrategy(null))\n          var view = pv.instantiate(null, null);\n          view.hydrate(null, null, null);\n          expect(view.nodes[0]).not.toBe(template);\n        });\n      });\n\n      describe('collect dom nodes with a regular element as root', () => {\n        createCollectDomNodesTestCases(false);\n      });\n\n      describe('collect dom nodes with a template element as root', () => {\n        createCollectDomNodesTestCases(true);\n      });\n\n      describe('create ElementInjectors', () => {\n        it('should use the directives of the ProtoElementInjector', () => {\n          var pv = new ProtoView(el('<div class=\"ng-binding\"></div>'),\n            new DynamicProtoChangeDetector(null), null);\n          pv.bindElement(new ProtoElementInjector(null, 1, [SomeDirective]));\n\n          var view = pv.instantiate(null, null);\n          view.hydrate(null, null, null);\n          expect(view.elementInjectors.length).toBe(1);\n          expect(view.elementInjectors[0].get(SomeDirective) instanceof SomeDirective).toBe(true);\n        });\n\n        it('should use the correct parent', () => {\n          var pv = new ProtoView(el('<div class=\"ng-binding\"><span class=\"ng-binding\"></span></div>'),\n            new DynamicProtoChangeDetector(null), null);\n          var protoParent = new ProtoElementInjector(null, 0, [SomeDirective]);\n          pv.bindElement(protoParent);\n          pv.bindElement(new ProtoElementInjector(protoParent, 1, [AnotherDirective]));\n\n          var view = pv.instantiate(null, null);\n          view.hydrate(null, null, null);\n          expect(view.elementInjectors.length).toBe(2);\n          expect(view.elementInjectors[0].get(SomeDirective) instanceof SomeDirective).toBe(true);\n          expect(view.elementInjectors[1].parent).toBe(view.elementInjectors[0]);\n        });\n\n        it('should not pass the host injector when a parent injector exists', () => {\n          var pv = new ProtoView(el('<div class=\"ng-binding\"><span class=\"ng-binding\"></span></div>'),\n            new DynamicProtoChangeDetector(null), null);\n          var protoParent = new ProtoElementInjector(null, 0, [SomeDirective]);\n          pv.bindElement(protoParent);\n          var testProtoElementInjector = new TestProtoElementInjector(protoParent, 1, [AnotherDirective]);\n          pv.bindElement(testProtoElementInjector);\n\n          var hostProtoInjector = new ProtoElementInjector(null, 0, []);\n          var hostInjector = hostProtoInjector.instantiate(null, null);\n          var view;\n          expect(() => view = pv.instantiate(hostInjector, null)).not.toThrow();\n          expect(testProtoElementInjector.parentElementInjector).toBe(view.elementInjectors[0]);\n          expect(testProtoElementInjector.hostElementInjector).toBeNull();\n        });\n\n        it('should pass the host injector when there is no parent injector', () => {\n          var pv = new ProtoView(el('<div class=\"ng-binding\"><span class=\"ng-binding\"></span></div>'),\n            new DynamicProtoChangeDetector(null), null);\n          pv.bindElement(new ProtoElementInjector(null, 0, [SomeDirective]));\n          var testProtoElementInjector = new TestProtoElementInjector(null, 1, [AnotherDirective]);\n          pv.bindElement(testProtoElementInjector);\n\n          var hostProtoInjector = new ProtoElementInjector(null, 0, []);\n          var hostInjector = hostProtoInjector.instantiate(null, null);\n          expect(() => pv.instantiate(hostInjector, null)).not.toThrow();\n          expect(testProtoElementInjector.parentElementInjector).toBeNull();\n          expect(testProtoElementInjector.hostElementInjector).toBe(hostInjector);\n        });\n      });\n\n      describe('collect root element injectors', () => {\n\n        it('should collect a single root element injector', () => {\n          var pv = new ProtoView(el('<div class=\"ng-binding\"><span class=\"ng-binding\"></span></div>'),\n            new DynamicProtoChangeDetector(null), null);\n          var protoParent = new ProtoElementInjector(null, 0, [SomeDirective]);\n          pv.bindElement(protoParent);\n          pv.bindElement(new ProtoElementInjector(protoParent, 1, [AnotherDirective]));\n\n          var view = pv.instantiate(null, null);\n          view.hydrate(null, null, null);\n          expect(view.rootElementInjectors.length).toBe(1);\n          expect(view.rootElementInjectors[0].get(SomeDirective) instanceof SomeDirective).toBe(true);\n        });\n\n        it('should collect multiple root element injectors', () => {\n          var pv = new ProtoView(el('<div><span class=\"ng-binding\"></span><span class=\"ng-binding\"></span></div>'),\n            new DynamicProtoChangeDetector(null), null);\n          pv.bindElement(new ProtoElementInjector(null, 1, [SomeDirective]));\n          pv.bindElement(new ProtoElementInjector(null, 2, [AnotherDirective]));\n\n          var view = pv.instantiate(null, null);\n          view.hydrate(null, null, null);\n          expect(view.rootElementInjectors.length).toBe(2)\n          expect(view.rootElementInjectors[0].get(SomeDirective) instanceof SomeDirective).toBe(true);\n          expect(view.rootElementInjectors[1].get(AnotherDirective) instanceof AnotherDirective).toBe(true);\n        });\n\n      });\n\n      describe('with component views', () => {\n        var ctx;\n\n        function createComponentWithSubPV(subProtoView) {\n          var pv = new ProtoView(el('<cmp class=\"ng-binding\"></cmp>'),\n            new DynamicProtoChangeDetector(null), new NativeShadowDomStrategy(null));\n          var binder = pv.bindElement(new ProtoElementInjector(null, 0, [SomeComponent], true));\n          binder.componentDirective = someComponentDirective;\n          binder.nestedProtoView = subProtoView;\n          return pv;\n        }\n\n        function createNestedView(protoView) {\n          ctx = new MyEvaluationContext();\n          var view = protoView.instantiate(null, null);\n          view.hydrate(new Injector([]), null, ctx);\n          return view;\n        }\n\n        it('should expose component services to the component', () => {\n          var subpv = new ProtoView(el('<span></span>'), new DynamicProtoChangeDetector(null), null);\n          var pv = createComponentWithSubPV(subpv);\n\n          var view = createNestedView(pv);\n\n          var comp = view.rootElementInjectors[0].get(SomeComponent);\n          expect(comp.service).toBeAnInstanceOf(SomeService);\n        });\n\n        it('should expose component services and component instance to directives in the shadow Dom',\n          () => {\n            var subpv = new ProtoView(\n              el('<div dec class=\"ng-binding\">hello shadow dom</div>'),\n              new DynamicProtoChangeDetector(null),\n              null);\n            subpv.bindElement(\n              new ProtoElementInjector(null, 0, [ServiceDependentDecorator]));\n            var pv = createComponentWithSubPV(subpv);\n\n            var view = createNestedView(pv);\n\n            var subView = view.componentChildViews[0];\n            var subInj = subView.rootElementInjectors[0];\n            var subDecorator = subInj.get(ServiceDependentDecorator);\n            var comp = view.rootElementInjectors[0].get(SomeComponent);\n\n            expect(subDecorator).toBeAnInstanceOf(ServiceDependentDecorator);\n            expect(subDecorator.service).toBe(comp.service);\n            expect(subDecorator.component).toBe(comp);\n          });\n\n        function expectViewHasNoDirectiveInstances(view) {\n          view.elementInjectors.forEach((inj) => expect(inj.hasInstances()).toBe(false));\n        }\n\n        it('dehydration should dehydrate child component views too', () => {\n          var subpv = new ProtoView(\n            el('<div dec class=\"ng-binding\">hello shadow dom</div>'),\n            new DynamicProtoChangeDetector(null),\n            null);\n          subpv.bindElement(\n            new ProtoElementInjector(null, 0, [ServiceDependentDecorator]));\n          var pv = createComponentWithSubPV(subpv);\n\n          var view = createNestedView(pv);\n          view.dehydrate();\n\n          expect(view.hydrated()).toBe(false);\n          expectViewHasNoDirectiveInstances(view);\n          view.componentChildViews.forEach(\n            (view) => expectViewHasNoDirectiveInstances(view));\n        });\n\n        it('should create shadow dom (Native Strategy)', () => {\n          var subpv = new ProtoView(el('<span>hello shadow dom</span>'),\n            new DynamicProtoChangeDetector(null),\n            null);\n          var pv = createComponentWithSubPV(subpv);\n\n          var view = createNestedView(pv);\n\n          expect(view.nodes[0].shadowRoot.childNodes[0].childNodes[0].nodeValue).toEqual('hello shadow dom');\n        });\n\n        it('should emulate shadow dom (Emulated Strategy)', () => {\n          var subpv = new ProtoView(el('<span>hello shadow dom</span>'),\n            new DynamicProtoChangeDetector(null), null);\n\n          var pv = new ProtoView(el('<cmp class=\"ng-binding\"></cmp>'),\n            new DynamicProtoChangeDetector(null), new EmulatedScopedShadowDomStrategy(null, null, null));\n          var binder = pv.bindElement(new ProtoElementInjector(null, 0, [SomeComponent], true));\n          binder.componentDirective = new DirectiveMetadataReader().read(SomeComponent);\n          binder.nestedProtoView = subpv;\n\n          var view = createNestedView(pv);\n          expect(view.nodes[0].childNodes[0].childNodes[0].nodeValue).toEqual('hello shadow dom');\n        });\n\n      });\n\n      describe('with template views', () => {\n        function createViewWithViewport() {\n          var templateProtoView = new ProtoView(\n            el('<div id=\"1\"></div>'), new DynamicProtoChangeDetector(null), null);\n          var pv = new ProtoView(el('<someTmpl class=\"ng-binding\"></someTmpl>'),\n            new DynamicProtoChangeDetector(null), new NativeShadowDomStrategy(null));\n          var binder = pv.bindElement(new ProtoElementInjector(null, 0, [SomeViewport]));\n          binder.viewportDirective = someViewportDirective;\n          binder.nestedProtoView = templateProtoView;\n\n          return createView(pv);\n        }\n\n        it('should create a ViewContainer for the Viewport directive', () => {\n          var view = createViewWithViewport();\n\n          var tmplComp = view.rootElementInjectors[0].get(SomeViewport);\n          expect(tmplComp.viewContainer).not.toBe(null);\n        });\n\n        it('dehydration should dehydrate viewcontainers', () => {\n          var view = createViewWithViewport();\n\n          var tmplComp = view.rootElementInjectors[0].get(SomeViewport);\n          expect(tmplComp.viewContainer.hydrated()).toBe(false);\n        });\n      });\n\n      if (!IS_NODEJS) {\n        describe('event handlers', () => {\n          var view, ctx, called, receivedEvent, dispatchedEvent;\n\n          function createViewAndContext(protoView) {\n            view = createView(protoView,\n                new EventManager([new DomEventsPlugin()], new FakeVmTurnZone()));\n            ctx = view.context;\n            called = 0;\n            receivedEvent = null;\n            ctx.callMe = (event) => {\n              called += 1;\n              receivedEvent = event;\n            }\n          }\n\n          function dispatchClick(el) {\n            dispatchedEvent = DOM.createMouseEvent('click');\n            DOM.dispatchEvent(el, dispatchedEvent);\n          }\n\n          function createProtoView() {\n            var pv = new ProtoView(el('<div class=\"ng-binding\"><div></div></div>'),\n              new DynamicProtoChangeDetector(null), null);\n            pv.bindElement(new TestProtoElementInjector(null, 0, []));\n            pv.bindEvent('click', parser.parseBinding('callMe($event)', null));\n            return pv;\n          }\n\n          it('should fire on non-bubbling native events', () => {\n            createViewAndContext(createProtoView());\n\n            dispatchClick(view.nodes[0]);\n\n            expect(called).toEqual(1);\n            expect(receivedEvent).toBe(dispatchedEvent);\n          });\n\n          it('should not fire on a bubbled native events', () => {\n            createViewAndContext(createProtoView());\n\n            dispatchClick(view.nodes[0].firstChild);\n\n            // This test passes trivially on webkit browsers due to\n            // https://bugs.webkit.org/show_bug.cgi?id=122755\n            expect(called).toEqual(0);\n          });\n\n          it('should not throw if the view is dehydrated', () => {\n            createViewAndContext(createProtoView());\n\n            view.dehydrate();\n            expect(() => dispatchClick(view.nodes[0])).not.toThrow();\n            expect(called).toEqual(0);\n          });\n\n          it('should support custom event emitters', () => {\n            var pv = new ProtoView(el('<div class=\"ng-binding\"><div></div></div>'),\n              new DynamicProtoChangeDetector(null), null);\n            pv.bindElement(new TestProtoElementInjector(null, 0, [EventEmitterDirective]));\n            pv.bindEvent('click', parser.parseBinding('callMe($event)', null));\n\n            createViewAndContext(pv);\n            var dir = view.elementInjectors[0].get(EventEmitterDirective);\n\n            var dispatchedEvent = new Object();\n\n            dir.click(dispatchedEvent);\n            expect(receivedEvent).toBe(dispatchedEvent);\n            expect(called).toEqual(1);\n\n            // Should not eval the binding, because custom emitter takes over.\n            dispatchClick(view.nodes[0]);\n\n            expect(called).toEqual(1);\n          });\n\n          it('should bind to directive events', () => {\n            var pv = new ProtoView(el('<div class=\"ng-binding\"></div>'),\n              new DynamicProtoChangeDetector(null), null);\n            pv.bindElement(new ProtoElementInjector(null, 0, [SomeDirectiveWithEventHandler]));\n            pv.bindEvent('click', parser.parseAction('onEvent($event)', null), 0);\n            view = createView(pv, new EventManager([new DomEventsPlugin()], new FakeVmTurnZone()));\n\n            var directive = view.elementInjectors[0].get(SomeDirectiveWithEventHandler);\n            expect(directive.event).toEqual(null);\n\n            dispatchClick(view.nodes[0]);\n            expect(directive.event).toBe(dispatchedEvent);\n          });\n        });\n      }\n\n      describe('react to record changes', () => {\n        var view, cd, ctx;\n\n        function createViewAndChangeDetector(protoView) {\n          view = createView(protoView);\n          ctx = view.context;\n          cd = view.changeDetector;\n        }\n\n        it('should consume text node changes', () => {\n          var pv = new ProtoView(el('<div class=\"ng-binding\">{{}}</div>'),\n            new DynamicProtoChangeDetector(null), null);\n          pv.bindElement(null);\n          pv.bindTextNode(0, parser.parseBinding('foo', null));\n          createViewAndChangeDetector(pv);\n\n          ctx.foo = 'buz';\n          cd.detectChanges();\n          expect(view.textNodes[0].nodeValue).toEqual('buz');\n        });\n\n        it('should consume element binding changes', () => {\n          var pv = new ProtoView(el('<div class=\"ng-binding\"></div>'),\n            new DynamicProtoChangeDetector(null), null);\n          pv.bindElement(null);\n          pv.bindElementProperty(parser.parseBinding('foo', null), 'id', reflector.setter('id'));\n          createViewAndChangeDetector(pv);\n\n          ctx.foo = 'buz';\n          cd.detectChanges();\n          expect(view.bindElements[0].id).toEqual('buz');\n        });\n\n        it('should consume directive watch expression change', () => {\n          var pv = new ProtoView(el('<div class=\"ng-binding\"></div>'),\n            new DynamicProtoChangeDetector(null), null);\n          pv.bindElement(new ProtoElementInjector(null, 0, [SomeDirective]));\n          pv.bindDirectiveProperty(0, parser.parseBinding('foo', null), 'prop', reflector.setter('prop'));\n          createViewAndChangeDetector(pv);\n\n          ctx.foo = 'buz';\n          cd.detectChanges();\n          expect(view.elementInjectors[0].get(SomeDirective).prop).toEqual('buz');\n        });\n\n        it('should notify a directive about changes after all its properties have been set', () => {\n          var pv = new ProtoView(el('<div class=\"ng-binding\"></div>'),\n            new DynamicProtoChangeDetector(null), null);\n\n          pv.bindElement(new ProtoElementInjector(null, 0, [\n            DirectiveBinding.createFromType(DirectiveImplementingOnChange, new Directive({lifecycle: [onChange]}))\n          ]));\n          pv.bindDirectiveProperty( 0, parser.parseBinding('a', null), 'a', reflector.setter('a'));\n          pv.bindDirectiveProperty( 0, parser.parseBinding('b', null), 'b', reflector.setter('b'));\n          createViewAndChangeDetector(pv);\n\n          ctx.a = 100;\n          ctx.b = 200;\n          cd.detectChanges();\n\n          var directive = view.elementInjectors[0].get(DirectiveImplementingOnChange);\n          expect(directive.c).toEqual(300);\n        });\n\n        it('should provide a map of updated properties', () => {\n          var pv = new ProtoView(el('<div class=\"ng-binding\"></div>'),\n            new DynamicProtoChangeDetector(null), null);\n\n          pv.bindElement(new ProtoElementInjector(null, 0, [\n            DirectiveBinding.createFromType(DirectiveImplementingOnChange, new Directive({lifecycle: [onChange]}))\n          ]));\n          pv.bindDirectiveProperty( 0, parser.parseBinding('a', null), 'a', reflector.setter('a'));\n          pv.bindDirectiveProperty( 0, parser.parseBinding('b', null), 'b', reflector.setter('b'));\n          createViewAndChangeDetector(pv);\n\n          ctx.a = 0;\n          ctx.b = 0;\n          cd.detectChanges();\n\n          ctx.a = 100;\n          cd.detectChanges();\n\n          var directive = view.elementInjectors[0].get(DirectiveImplementingOnChange);\n          expect(directive.changes[\"a\"].currentValue).toEqual(100);\n          expect(directive.changes[\"b\"]).not.toBeDefined();\n        });\n      });\n    });\n\n    describe('protoView createRootProtoView', () => {\n      var element, pv;\n      beforeEach(() => {\n        element = DOM.createElement('div');\n        pv = new ProtoView(el('<div>hi</div>'), new DynamicProtoChangeDetector(null),\n          new NativeShadowDomStrategy(null));\n      });\n\n      it('should create the root component when instantiated', () => {\n        var rootProtoView = ProtoView.createRootProtoView(pv, element,\n          someComponentDirective, new DynamicProtoChangeDetector(null),\n          new NativeShadowDomStrategy(null));\n        var view = rootProtoView.instantiate(null, null);\n        view.hydrate(new Injector([]), null, null);\n        expect(view.rootElementInjectors[0].get(SomeComponent)).not.toBe(null);\n      });\n\n      it('should inject the protoView into the shadowDom', () => {\n        var rootProtoView = ProtoView.createRootProtoView(pv, element,\n          someComponentDirective, new DynamicProtoChangeDetector(null),\n          new NativeShadowDomStrategy(null));\n        var view = rootProtoView.instantiate(null, null);\n        view.hydrate(new Injector([]), null, null);\n        expect(element.shadowRoot.childNodes[0].childNodes[0].nodeValue).toEqual('hi');\n      });\n    });\n  });\n}\n\nclass SomeDirective {\n  prop;\n  constructor() {\n    this.prop = 'foo';\n  }\n}\n\nclass DirectiveImplementingOnChange {\n  a;\n  b;\n  c;\n  changes;\n\n  onChange(changes) {\n    this.c = this.a + this.b;\n    this.changes = changes;\n  }\n}\n\nclass SomeService {}\n\n@Component({services: [SomeService]})\nclass SomeComponent {\n  service: SomeService;\n  constructor(service: SomeService) {\n    this.service = service;\n  }\n}\n\n@Decorator({\n  selector: '[dec]'\n})\nclass ServiceDependentDecorator {\n  component: SomeComponent;\n  service: SomeService;\n  constructor(component: SomeComponent, service: SomeService) {\n    this.component = component;\n    this.service = service;\n  }\n}\n\n@Viewport({\n  selector: 'someTmpl'\n})\nclass SomeViewport {\n  viewContainer: ViewContainer;\n  constructor(viewContainer: ViewContainer) {\n    this.viewContainer = viewContainer;\n  }\n}\n\nclass AnotherDirective {\n  prop:string;\n  constructor() {\n    this.prop = 'anotherFoo';\n  }\n}\n\nclass EventEmitterDirective {\n  _clicker:Function;\n  constructor(@EventEmitter('click') clicker:Function) {\n    this._clicker = clicker;\n  }\n  click(eventData) {\n    this._clicker(eventData);\n  }\n}\n\nclass SomeDirectiveWithEventHandler {\n  event;\n\n  constructor() {\n    this.event = null;\n  }\n\n  onEvent(event) {\n    this.event = event;\n  }\n}\n\nclass MyEvaluationContext {\n  foo:string;\n  a;\n  b;\n  callMe;\n  constructor() {\n    this.foo = 'bar';\n  };\n}\n\nclass TestProtoElementInjector extends ProtoElementInjector {\n  parentElementInjector: ElementInjector;\n  hostElementInjector: ElementInjector;\n\n  constructor(parent:ProtoElementInjector, index:int, bindings:List, firstBindingIsComponent:boolean = false) {\n    super(parent, index, bindings, firstBindingIsComponent);\n  }\n\n  instantiate(parent:ElementInjector, host:ElementInjector):ElementInjector {\n    this.parentElementInjector = parent;\n    this.hostElementInjector = host;\n    return super.instantiate(parent, host);\n  }\n}\n\nclass FakeVmTurnZone extends VmTurnZone {\n  constructor() {\n    super({enableLongStackTrace: false});\n  }\n\n  run(fn) {\n    fn();\n  }\n\n  runOutsideAngular(fn) {\n    fn();\n  }\n}\n","assert.argumentTypes($__placeholder__0)","assert.type.any","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","$traceurRuntime.superGet($__placeholder__0, $__placeholder__1, $__placeholder__2)","$__placeholder__0.call($__placeholder__1)","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","return assert.returnType(($__placeholder__0), $__placeholder__1)"]}
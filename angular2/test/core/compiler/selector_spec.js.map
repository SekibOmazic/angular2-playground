{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/core/compiler/selector_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/26"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/selector_spec.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {describe, it, expect, beforeEach, ddescribe, iit, xit, el} from 'angular2/test_lib';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {SelectorMatcher} from 'angular2/src/core/compiler/selector';\nimport {CssSelector} from 'angular2/src/core/compiler/selector';\nimport {List, ListWrapper, MapWrapper} from 'angular2/src/facade/collection';\n\nexport function main() {\n  describe('SelectorMatcher', () => {\n    var matcher, matched, selectableCollector, s1, s2, s3, s4;\n\n    function reset() {\n      matched = ListWrapper.create();\n    }\n\n    beforeEach(() => {\n      reset();\n      s1 = s2 = s3 = s4 = null;\n      selectableCollector = (selector, context) => {\n        ListWrapper.push(matched, selector);\n        ListWrapper.push(matched, context);\n      }\n      matcher = new SelectorMatcher();\n    });\n\n    it('should select by element name case insensitive', () => {\n      matcher.addSelectable(s1 = CssSelector.parse('someTag'), 1);\n\n      expect(matcher.match(CssSelector.parse('SOMEOTHERTAG'), selectableCollector)).toEqual(false);\n      expect(matched).toEqual([]);\n\n      expect(matcher.match(CssSelector.parse('SOMETAG'), selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1,1]);\n    });\n\n    it('should select by class name case insensitive', () => {\n      matcher.addSelectable(s1 = CssSelector.parse('.someClass'), 1);\n      matcher.addSelectable(s2 = CssSelector.parse('.someClass.class2'), 2);\n\n      expect(matcher.match(CssSelector.parse('.SOMEOTHERCLASS'), selectableCollector)).toEqual(false);\n      expect(matched).toEqual([]);\n\n      expect(matcher.match(CssSelector.parse('.SOMECLASS'), selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1,1]);\n\n      reset();\n      expect(matcher.match(CssSelector.parse('.someClass.class2'), selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1,1,s2,2]);\n    });\n\n    it('should select by attr name case insensitive independent of the value', () => {\n      matcher.addSelectable(s1 = CssSelector.parse('[someAttr]'), 1);\n      matcher.addSelectable(s2 = CssSelector.parse('[someAttr][someAttr2]'), 2);\n\n      expect(matcher.match(CssSelector.parse('[SOMEOTHERATTR]'), selectableCollector)).toEqual(false);\n      expect(matched).toEqual([]);\n\n      expect(matcher.match(CssSelector.parse('[SOMEATTR]'), selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1,1]);\n\n      reset();\n      expect(matcher.match(CssSelector.parse('[SOMEATTR=someValue]'), selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1,1]);\n\n      reset();\n      expect(matcher.match(CssSelector.parse('[someAttr][someAttr2]'), selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1,1,s2,2]);\n    });\n\n    it('should select by attr name only once if the value is from the DOM', () => {\n      matcher.addSelectable(s1 = CssSelector.parse('[some-decor]'), 1);\n\n      var elementSelector = new CssSelector();\n      var element = el('<div attr></div>');\n      var empty = DOM.getAttribute(element, 'attr');\n      elementSelector.addAttribute('some-decor', empty);\n      matcher.match(elementSelector, selectableCollector);\n      expect(matched).toEqual([s1,1]);\n    });\n\n    it('should select by attr name and value case insensitive', () => {\n      matcher.addSelectable(s1 = CssSelector.parse('[someAttr=someValue]'), 1);\n\n      expect(matcher.match(CssSelector.parse('[SOMEATTR=SOMEOTHERATTR]'), selectableCollector)).toEqual(false);\n      expect(matched).toEqual([]);\n\n      expect(matcher.match(CssSelector.parse('[SOMEATTR=SOMEVALUE]'), selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1,1]);\n    });\n\n    it('should select by element name, class name and attribute name with value', () => {\n      matcher.addSelectable(s1 = CssSelector.parse('someTag.someClass[someAttr=someValue]'), 1);\n\n      expect(matcher.match(CssSelector.parse('someOtherTag.someOtherClass[someOtherAttr]'), selectableCollector)).toEqual(false);\n      expect(matched).toEqual([]);\n\n      expect(matcher.match(CssSelector.parse('someTag.someOtherClass[someOtherAttr]'), selectableCollector)).toEqual(false);\n      expect(matched).toEqual([]);\n\n      expect(matcher.match(CssSelector.parse('someTag.someClass[someOtherAttr]'), selectableCollector)).toEqual(false);\n      expect(matched).toEqual([]);\n\n      expect(matcher.match(CssSelector.parse('someTag.someClass[someAttr]'), selectableCollector)).toEqual(false);\n      expect(matched).toEqual([]);\n\n      expect(matcher.match(CssSelector.parse('someTag.someClass[someAttr=someValue]'), selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1,1]);\n    });\n\n    it('should select independent of the order in the css selector', () => {\n      matcher.addSelectable(s1 = CssSelector.parse('[someAttr].someClass'), 1);\n      matcher.addSelectable(s2 = CssSelector.parse('.someClass[someAttr]'), 2);\n      matcher.addSelectable(s3 = CssSelector.parse('.class1.class2'), 3);\n      matcher.addSelectable(s4 = CssSelector.parse('.class2.class1'), 4);\n\n      expect(matcher.match(CssSelector.parse('[someAttr].someClass'), selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1,1,s2,2]);\n\n      reset();\n      expect(matcher.match(CssSelector.parse('.someClass[someAttr]'), selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1,1,s2,2]);\n\n      reset();\n      expect(matcher.match(CssSelector.parse('.class1.class2'), selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s3,3,s4,4]);\n\n      reset();\n      expect(matcher.match(CssSelector.parse('.class2.class1'), selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s4,4,s3,3]);\n    });\n\n    it('should not select with a matching :not selector', () => {\n      matcher.addSelectable(CssSelector.parse('p:not(.someClass)'), 1);\n      matcher.addSelectable(CssSelector.parse('p:not([someAttr])'), 2);\n      matcher.addSelectable(CssSelector.parse(':not(.someClass)'), 3);\n      matcher.addSelectable(CssSelector.parse(':not(p)'), 4);\n      matcher.addSelectable(CssSelector.parse(':not(p[someAttr])'), 5);\n\n      expect(matcher.match(CssSelector.parse('p.someClass[someAttr]'), selectableCollector)).toEqual(false);\n      expect(matched).toEqual([]);\n    });\n\n    it('should select with a non matching :not selector', () => {\n      matcher.addSelectable(s1 = CssSelector.parse('p:not(.someClass)'), 1);\n      matcher.addSelectable(s2 = CssSelector.parse('p:not(.someOtherClass[someAttr])'), 2);\n      matcher.addSelectable(s3 = CssSelector.parse(':not(.someClass)'), 3);\n      matcher.addSelectable(s4 = CssSelector.parse(':not(.someOtherClass[someAttr])'), 4);\n\n      expect(matcher.match(CssSelector.parse('p[someOtherAttr].someOtherClass'), selectableCollector)).toEqual(true);\n      expect(matched).toEqual([s1,1,s2,2,s3,3,s4,4]);\n    });\n  });\n\n  describe('CssSelector.parse', () => {\n    it('should detect element names', () => {\n      var cssSelector = CssSelector.parse('sometag');\n      expect(cssSelector.element).toEqual('sometag');\n      expect(cssSelector.toString()).toEqual('sometag');\n    });\n\n    it('should detect class names', () => {\n      var cssSelector = CssSelector.parse('.someClass');\n      expect(cssSelector.classNames).toEqual(['someclass']);\n\n      expect(cssSelector.toString()).toEqual('.someclass');\n    });\n\n    it('should detect attr names', () => {\n      var cssSelector = CssSelector.parse('[attrname]');\n      expect(cssSelector.attrs).toEqual(['attrname', '']);\n\n      expect(cssSelector.toString()).toEqual('[attrname]');\n    });\n\n    it('should detect attr values', () => {\n      var cssSelector = CssSelector.parse('[attrname=attrvalue]');\n      expect(cssSelector.attrs).toEqual(['attrname', 'attrvalue']);\n      expect(cssSelector.toString()).toEqual('[attrname=attrvalue]');\n    });\n\n    it('should detect multiple parts', () => {\n      var cssSelector = CssSelector.parse('sometag[attrname=attrvalue].someclass');\n      expect(cssSelector.element).toEqual('sometag');\n      expect(cssSelector.attrs).toEqual(['attrname', 'attrvalue']);\n      expect(cssSelector.classNames).toEqual(['someclass']);\n\n      expect(cssSelector.toString()).toEqual('sometag.someclass[attrname=attrvalue]');\n    });\n\n    it('should detect :not', () => {\n      var cssSelector = CssSelector.parse('sometag:not([attrname=attrvalue].someclass)');\n      expect(cssSelector.element).toEqual('sometag');\n      expect(cssSelector.attrs.length).toEqual(0);\n      expect(cssSelector.classNames.length).toEqual(0);\n\n      var notSelector = cssSelector.notSelector;\n      expect(notSelector.element).toEqual(null);\n      expect(notSelector.attrs).toEqual(['attrname', 'attrvalue']);\n      expect(notSelector.classNames).toEqual(['someclass']);\n\n      expect(cssSelector.toString()).toEqual('sometag:not(.someclass[attrname=attrvalue])');\n    });\n\n    it('should detect :not without truthy', () => {\n      var cssSelector = CssSelector.parse(':not([attrname=attrvalue].someclass)');\n      expect(cssSelector.element).toEqual(\"*\");\n\n      var notSelector = cssSelector.notSelector;\n      expect(notSelector.attrs).toEqual(['attrname', 'attrvalue']);\n      expect(notSelector.classNames).toEqual(['someclass']);\n\n      expect(cssSelector.toString()).toEqual('*:not(.someclass[attrname=attrvalue])');\n    });\n\n    it('should throw when nested :not', () => {\n      expect(() => {\n        CssSelector.parse('sometag:not(:not([attrname=attrvalue].someclass))')\n      }).toThrowError('Nesting :not is not allowed in a selector');\n    });\n  });\n}","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;"]}
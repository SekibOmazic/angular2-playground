{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/core/compiler/shadow_dom/shadow_css_spec.js","angular2/test/core/compiler/shadow_dom/@traceur/generated/TemplateParser/8","angular2/test/core/compiler/shadow_dom/@traceur/generated/TemplateParser/7","angular2/test/core/compiler/shadow_dom/@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/26"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/shadow_dom/shadow_css_spec.js","sourceRoot":"/Users/jbisa/ksi/devel/angular2/dist/js/dev/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {describe, beforeEach, it, expect, ddescribe, iit, SpyObject, el, IS_NODEJS} from 'angular2/test_lib';\nimport {ShadowCss} from 'angular2/src/core/compiler/shadow_dom_emulation/shadow_css';\n\nimport {RegExpWrapper, StringWrapper} from 'angular2/src/facade/lang';\n\nexport function main() {\n  describe('ShadowCss', function() {\n\n    function s(css: string, contentAttr:string, hostAttr:string = '') {\n      var shadowCss = new ShadowCss();\n      var shim = shadowCss.shimCssText(css, contentAttr, hostAttr);\n      var nlRegexp = RegExpWrapper.create('\\\\n');\n      return StringWrapper.replaceAll(shim, nlRegexp, '');\n    }\n\n    it('should handle empty string', () => {\n      expect(s('', 'a')).toEqual('');\n    });\n\n    it('should add an attribute to every rule', () => {\n      var css = 'one {color: red;}two {color: red;}';\n      var expected = 'one[a] {color: red;}two[a] {color: red;}';\n      expect(s(css, 'a')).toEqual(expected);\n    });\n\n    it('should hanlde invalid css', () => {\n      var css = 'one {color: red;}garbage';\n      var expected = 'one[a] {color: red;}';\n      expect(s(css, 'a')).toEqual(expected);\n    });\n\n    it('should add an attribute to every selector', () => {\n      var css = 'one, two {color: red;}';\n      var expected = 'one[a], two[a] {color: red;}';\n      expect(s(css, 'a')).toEqual(expected);\n    });\n\n    it('should handle media rules', () => {\n      var css = '@media screen and (max-width: 800px) {div {font-size: 50px;}}';\n      var expected = '@media screen and (max-width: 800px) {div[a] {font-size: 50px;}}';\n      expect(s(css, 'a')).toEqual(expected);\n    });\n\n    it('should handle media rules with simple rules', () => {\n      var css = '@media screen and (max-width: 800px) {div {font-size: 50px;}} div {}';\n      var expected = '@media screen and (max-width: 800px) {div[a] {font-size: 50px;}}div[a] {}';\n      expect(s(css, 'a')).toEqual(expected);\n    });\n\n    it('should handle complicated selectors', () => {\n      expect(s('one::before {}', 'a')).toEqual('one[a]::before {}');\n      expect(s('one two {}', 'a')).toEqual('one[a] two[a] {}');\n      expect(s('one>two {}', 'a')).toEqual('one[a] > two[a] {}');\n      expect(s('one+two {}', 'a')).toEqual('one[a] + two[a] {}');\n      expect(s('one~two {}', 'a')).toEqual('one[a] ~ two[a] {}');\n      expect(s('.one.two > three {}', 'a')).toEqual('.one.two[a] > three[a] {}');\n      expect(s('one[attr=\"value\"] {}', 'a')).toEqual('one[attr=\"value\"][a] {}');\n      expect(s('one[attr=value] {}', 'a')).toEqual('one[attr=\"value\"][a] {}');\n      expect(s('one[attr^=\"value\"] {}', 'a')).toEqual('one[attr^=\"value\"][a] {}');\n      expect(s('one[attr$=\"value\"] {}', 'a')).toEqual('one[attr$=\"value\"][a] {}');\n      expect(s('one[attr*=\"value\"] {}', 'a')).toEqual('one[attr*=\"value\"][a] {}');\n      expect(s('one[attr|=\"value\"] {}', 'a')).toEqual('one[attr|=\"value\"][a] {}');\n      expect(s('one[attr] {}', 'a')).toEqual('one[attr][a] {}');\n      expect(s('[is=\"one\"] {}', 'a')).toEqual('[is=\"one\"][a] {}');\n    });\n\n    it('should handle :host', () => {\n      expect(s(':host {}', 'a', 'a-host')).toEqual('[a-host] {}');\n      expect(s(':host(.x,.y) {}', 'a', 'a-host')).toEqual('[a-host].x, [a-host].y {}');\n      expect(s(':host(.x,.y) > .z {}', 'a', 'a-host')).toEqual('[a-host].x > .z, [a-host].y > .z {}');\n    });\n\n    it('should handle :host-context', () => {\n      expect(s(':host-context(.x) {}', 'a', 'a-host')).toEqual('[a-host].x, .x [a-host] {}');\n      expect(s(':host-context(.x) > .y {}', 'a', 'a-host')).toEqual('[a-host].x > .y, .x [a-host] > .y {}');\n    });\n\n    it('should support polyfill-next-selector', () => {\n      var css = s(\"polyfill-next-selector {content: 'x > y'} z {}\", 'a');\n      expect(css).toEqual('x[a] > y[a] {}');\n\n      css = s('polyfill-next-selector {content: \"x > y\"} z {}', 'a');\n      expect(css).toEqual('x[a] > y[a] {}');\n    });\n\n    it('should support polyfill-unscoped-rule', () => {\n      var css = s(\"polyfill-unscoped-rule {content: '#menu > .bar';background: blue;}\", 'a');\n      expect(StringWrapper.contains(css, '#menu > .bar {;background: blue;}')).toBeTruthy();\n\n      css = s('polyfill-unscoped-rule {content: \"#menu > .bar\";background: blue;}', 'a');\n      expect(StringWrapper.contains(css, '#menu > .bar {;background: blue;}')).toBeTruthy();\n    });\n\n    if (!IS_NODEJS) {\n      //TODO: reactivate once CSS parser is fixed: https://github.com/reworkcss/css/issues/65\n      it('should support polyfill-rule', () => {\n        var css = s(\"polyfill-rule {content: ':host.foo .bar';background: blue;}\", 'a', 'a-host');\n        expect(css).toEqual('[a-host].foo .bar {background: blue;}');\n\n        css = s('polyfill-rule {content: \":host.foo .bar\";background: blue;}', 'a', 'a-host');\n        expect(css).toEqual('[a-host].foo .bar {background: blue;}');\n      });\n    }\n\n    it('should handle ::shadow', () => {\n      var css = s('x::shadow > y {}', 'a');\n      expect(css).toEqual('x[a] > y[a] {}');\n    });\n\n    it('should handle /deep/', () => {\n      var css = s('x /deep/ y {}', 'a');\n      expect(css).toEqual('x[a] y[a] {}');\n    });\n  });\n}\n","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;"]}